# name             lazyOff lazyOn timing
# ----------------+-------+------+------
# hook_add         o       o      プラグインが dein.vim によって追加されたとき
# hook_source      x       o      プラグインが読み込まれる直前
# hook_post_source x       o      プラグインが読み込まれた直後
# hook_post_update o       o      プラグインが更新された直後

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
hook_source = 'source ~/.config/nvim/plugins/deoplete.rc.vim'

[[plugins]]
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets']
on_i = 1
on_ft = ['snippet']
hook_source = 'source ~/.config/nvim/plugins/neosnippet.rc.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neoyank.vim'

[[plugins]]
repo = 'ozelentok/denite-gtags'

[[plugins]]
repo = 'thinca/vim-qfreplace'
on_cmd = 'Qfreplace'

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim', 'denite-gtags', 'neoyank.vim', 'vim-qfreplace']
on_func = ['Denite', 'DeniteBufferDir', 'DeniteCursorWord', 'DeniteProjectDir']
hook_add = 'source ~/.config/nvim/plugins/denite.rc.vim'
hook_post_source = '''
" Change file_rec command.
call denite#custom#var('file_rec', 'command', ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])
" Change file_mru matchers
call denite#custom#source(
  \ 'file_mru', 'matchers', ['matcher_fuzzy', 'matcher_project_files'])
" Change mappings.
call denite#custom#map(
  \ 'insert',
  \ '<C-j>',
  \ '<denite:move_to_next_line>',
  \ 'noremap'
  \)
call denite#custom#map(
  \ 'insert',
  \ '<C-k>',
  \ '<denite:move_to_previous_line>',
  \ 'noremap'
  \)
call denite#custom#map(
  \ 'insert',
  \ '<C-a>',
  \ '<denite:move_caret_to_head>',
  \ 'noremap'
  \)
call denite#custom#map(
  \ 'insert',
  \ '<C-f>',
  \ '<denite:scroll_page_forwards>',
  \ 'noremap'
  \)
call denite#custom#map(
  \ 'insert',
  \ '<C-b>',
  \ '<denite:scroll_page_backwards>',
  \ 'noremap'
  \)
call denite#custom#map(
  \ 'insert',
  \ '<C-g>',
  \ '<denite:move_to_last_line>',
  \ 'noremap'
  \)
call denite#custom#map(
  \ 'insert',
  \ 'jj',
  \ '<denite:leave_mode>',
  \ 'noremap'
  \)
call denite#custom#map(
  \ 'insert',
  \ '<C-Space>',
  \ '<denite:toggle_select_down>',
  \ 'noremap'
  \)
call denite#custom#map(
  \ 'insert',
  \ '<C-S>',
  \ '<denite:do_action:split>',
  \ 'noremap'
  \)
" Ag command on grep source
call denite#custom#var('grep', 'command', ['ag'])
call denite#custom#var('grep', 'default_opts', ['-i', '--vimgrep'])
call denite#custom#var('grep', 'recursive_opts', [])
call denite#custom#var('grep', 'pattern_opt', [])
call denite#custom#var('grep', 'separator', ['--'])
call denite#custom#var('grep', 'final_opts', [])
" Change default prompt
call denite#custom#option('default', 'prompt', '>')
" Change ignore_globs
call denite#custom#filter('matcher_ignore_globs', 'ignore_globs',
  \ [ '.git/', '.ropeproject/', '__pycache__/', '*.o', '*.pyc',
  \   'venv/', 'images/', '*.min.*', 'img/', 'fonts/'])
function! MyDeniteReplace(context)
  let qflist = []
  for target in a:context['targets']
    if !has_key(target, 'action__path') | continue | endif
    if !has_key(target, 'action__line') | continue | endif
    if !has_key(target, 'action__text') | continue | endif

    call add(qflist, {
          \ 'filename': target['action__path'],
          \ 'lnum': target['action__line'],
          \ 'text': target['action__text']
          \ })
  endfor
  call setqflist(qflist)
  call qfreplace#start('')
endfunction
call denite#custom#action('file', 'qfreplace', function('MyDeniteReplace'))
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
depends = ['deoplete.nvim']
on_ft = 'python'
hook_source = 'source ~/.config/nvim/plugins/deoplete-jedi.rc.vim'

[[plugins]]
repo = 'jmcantrell/vim-virtualenv'
on_ft = 'python'

[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = 'python'
hook_source = 'source ~/.config/nvim/plugins/jedi.rc.vim'

[[plugins]]
repo = 'hynek/vim-python-pep8-indent'
on_ft = 'python'

[[plugins]]
repo = 'zchee/deoplete-clang'
depends = ['deoplete.nvim']
on_ft = ['c', 'cpp', 'cmake']
hook_source = 'source ~/.config/nvim/plugins/deoplete-clang.rc.vim'

[[plugins]]
repo = 'scrooloose/nerdcommenter'
on_map = '<Plug>NERDCommenterToggle'
hook_add = 'source ~/.config/nvim/plugins/nerdcommenter.rc.vim'

[[plugins]]
repo = 'glidenote/memolist.vim'
on_func = ['MemoNew', 'MemoList', 'MemoGrep']
hook_add = 'source ~/.config/nvim/plugins/memolist.rc.vim'

[[plugins]]
repo = 'gregsexton/gitv'
depends = ['vim-fugitive']
on_func = 'Gitv'
hook_source = 'source ~/.config/nvim/plugins/gitv.rc.vim'

[[plugins]]
repo = 'vim-scripts/gtags.vim'
on_func = 'GtagsCursor'
hook_source = 'source ~/.config/nvim/plugins/gtags.rc.vim'

[[plugins]]
repo = 'majutsushi/tagbar'
on_func = ['TagbarToggle']
hook_add = 'source ~/.config/nvim/plugins/tagbar.rc.vim'

[[plugins]]
repo = 'Shougo/unite.vim'
on_func = ['Unite']
hook_source = 'source ~/.config/nvim/plugins/unite.rc.vim'

[[plugins]]
repo = 'Shougo/vimfiler'
depends = ['unite.vim']
on_func = ['VimFilerTab', 'VimFiler', 'VimFilerExplorer', 'VimFilerBufferDir']
hook_add = 'source ~/.config/nvim/plugins/vimfiler.rc.vim'

[[plugins]]
repo = 'kannokanno/previm'
on_cmd = 'PrevimOpen'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'Shougo/neoinclude.vim'
depends = ['deoplete.nvim']
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'pearofducks/ansible-vim'
on_ft = 'ansible'

[[plugins]]
repo = 'rhysd/vim-operator-surround'
depends = ['vim-operator-user', 'vim-repeat']
on_map = '<Plug>'
hook_add = 'source ~/.config/nvim/plugins/vim-operator-surround.rc.vim'

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 't9md/vim-quickhl'
on_map = '<Plug>'
hook_add = 'source ~/.config/nvim/plugins/quickhl.rc.vim'

[[plugins]]
repo = 'thinca/vim-quickrun'
on_map = '<Plug>'
hook_add = 'source ~/.config/nvim/plugins/quickrun.rc.vim'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'

[[plugins]]
repo = 'zchee/deoplete-go'
depends = ['deoplete.nvim']
build = 'make'
on_ft = 'go'

[[plugins]]
repo = 'justinhoward/fzf-neoyank'
depends = ['neoyank.vim', 'fzf.vim']
on_func = ['FZFNeoyank', 'FZFNeoyankSelection']
hook_add = 'source ~/.config/nvim/plugins/fzf-neoyank.rc.vim'
