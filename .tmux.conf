set-window-option -g mouse on

# disable ESC delay
set -s escape-time 0

# enable clipboard on MacOS X
# see. http://d.hatena.ne.jp/koseki2/20110816/TmuxCopy
set-option -g default-command \
'which reattach-to-user-namespace > /dev/null 2>&1 && \
reattach-to-user-namespace -l $SHELL || $SHELL'

#key mappings
# vi binding
set-window-option -g mode-keys vi

# set prefix (^Z)
unbind C-b
set -g prefix C-z
bind z send-prefix

# pane or window cycle last one
bind C-z run "tmux last-pane || tmux last-window"

bind : command-prompt

# split
bind s split-window -v
bind v split-window -h

# bind q kill-pane
bind T break-pane  # 現在のペインを新しいウィンドウの単独ペインにする
bind j select-pane -D
bind k select-pane -U
bind h select-pane -L
bind l select-pane -R

# move window
bind -r C-p select-window -t :-
bind -r C-n select-window -t :+

# resize
bind -r < resize-pane -L 1
bind -r > resize-pane -R 1
bind -r - resize-pane -D 1
bind -r + resize-pane -U 1
bind -r H resize-pane -L 1
bind -r J resize-pane -D 1
bind -r K resize-pane -U 1
bind -r L resize-pane -R 1

# start copy-mode and display message
bind-key [ copy-mode \; display "(Copy mode)"
bind-key Escape copy-mode \; display "(Copy mode)"
if shell "which xsel" '\
    bind-key -t vi-copy enter copy-pipe "xsel -ib"; \
    bind-key ] run "xsel | tmux load-buffer - && tmux paste-buffer"; \
    bind-key ^y run-shell "tmux save-buffer - | xsel -ib" \; display "Copied."; \
    bind-key y run-shell "tmux save-buffer - | xsel -ib" \; display "Copied."; \
'
if shell "which pbcopy" '\
    bind-key -t vi-copy enter copy-pipe "reattach-to-user-namespace pbcopy"; \
    bind-key ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"; \
    bind-key ^y run-shell "tmux save-buffer - | reattach-to-user-namespace pbcopy" \; display "Copied."; \
    bind-key y run-shell "tmux save-buffer - | reattach-to-user-namespace pbcopy" \; display "Copied."; \
'
# 矩形選択
bind-key -t vi-copy C-v rectangle-toggle
# 1行選択
bind-key -t vi-copy V select-line

# reload config (r)
bind r source-file ~/.tmux.conf \; display-message "Reload Config!!"

# 新しいSSH接続を名前をつけたウィンドウで作成する。
bind-key S command-prompt "new-window -n %1 'ssh -t %1'"
bind-key ^s command-prompt "split-window 'ssh -t %1'"
bind-key ^v command-prompt "split-window -h 'ssh -t %1'"

# ウィンドウ名を自動的に更新する
set-window-option -g automatic-rename on

# ウィンドウで動きがあるとステータスラインをハイライト
set-window-option -g monitor-activity on

set -g history-limit 5000

bind-key ^l choose-window

# base index at 1
set -g base-index 1
set -g pane-base-index 1

# color settings
# enable 256 color
set-option -g default-terminal "xterm-256color"
# status line
set -g status-fg colour250
set -g status-bg colour240
# pane border
set -g pane-border-fg colour26
set -g pane-active-border-fg colour39

# status line
set -g status-position top
set -g status on
# reload every 2sec
set -g status-interval 2

# left
set -g status-justify "left"
set -g status-left-length 36
set -g status-left '[#S:#I.#P]#[fg=colour6]#h'

# main
set -g status-justify centre
set -g window-status-format "#I #W"
set -g window-status-current-format "#[fg=colour255,bg=colour33,bold]#I #W"

# right
set -g status-right-length 150
set -g status-right '#[fg=colour46]%Y-%m-%d %H:%M'

# message
set -g message-attr bold
set -g message-fg white
set -g message-bg colour33

# log output
# キーバインドを変えてから有効にし直す
# bind-key H pipe-pane 'cat >> $HOME/.tmux/tmux-#W.log' \; display-message 'Started logging to $HOME/.tmux/tmux-#W.log'
# bind-key h pipe-pane \; display-message 'Ended logging to $HOME/.tmux/tmux-#W.log'

# powerline
# git clone https://github.com/Lokaltog/powerline.git
# source ~/repos/dotfiles/powerline_tmux.conf
