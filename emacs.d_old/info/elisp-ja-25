Info file: elisp-ja,    -*-Text-*-
produced by `texinfo-format-buffer'
from file `elisp.texi'
using `texinfmt.el' version 2.38 of 3 July 1998.


INFO-DIR-SECTION Editors
START-INFO-DIR-ENTRY
* Elisp-ja: (elisp-ja).	The Emacs Lisp Reference Manual(Japanese).
END-INFO-DIR-ENTRY



Emacs Lispリファレンスマニュアル2.5版であり, Emacs 20.3版に対応します.

Published by the Free Software Foundation 59 Temple Place, Suite 330
Boston, MA 02111-1307 USA

Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998 Free
Software Foundation, Inc.

Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one.

Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that this permission notice may be stated in a
translation approved by the Foundation.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided also that
the section entitled "GNU General Public License" is included exactly
as in the original, and provided that the entire resulting derived
work is distributed under the terms of a permission notice identical
to this one.

Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that the section entitled "GNU General Public
License" may be included in a translation approved by the Free
Software Foundation instead of in the original English.






File: elisp-ja, Node: Object Internals, Next: Standard Errors, Prev: Writing Emacs Primitives, Up: GNU Emacs Internals

オブジェクトの内部
==================

GNU Emacs Lispは, さまざまな型のデータを扱います.  実際のデータはヒー
プに保存されていて, プログラムはポインタを介してそれらを参照します. 
ほとんどの実装では, ポインタは32ビット長です.  Emacsをコンパイルしたオ
ペレーティングシステムやマシンの種類に依存しますが, オブジェクトのアド
レスには28ビットを使い, 残りのビットはガベッジコレクションの印やオブジェ
クトの型を表す識別子であるタグに使います.

Lispオブジェクトはタグ付ポインタとして表現しますから, 任意のオブジェク
トのLispデータ型を判定することが可能です.  Cのデータ`Lisp_Object'は, 
任意のデータ型のLispオブジェクトを保持できます.  普通の変数は
`Lisp_Object'型ですから, Lispの任意の値の任意の型を保持できます.  実際
のデータ型は, 実行中にのみ判定できます.  関数引数についても同じことが
いえます.  特定の型の引数のみを受け付る関数が必要な場合には, 適切な述
語（*Note Type Predicates::）を使って型を明示的に検査する必要がありま
す.

* Menu:

* Buffer Internals::    Components of a buffer structure.
* Window Internals::    Components of a window structure.
* Process Internals::   Components of a process structure.



File: elisp-ja, Node: Buffer Internals, Next: Window Internals, Prev: Object Internals, Up: Object Internals

バッファの内部
--------------

バッファには, Lispプログラマが直接には参照できないフィールドがあります. 
それらをCのコードで使っている名前で以下に述べます.  多くはLisp基本関数
を介してLispプログラムから間接的に参照できます.

`name'
     バッファ名はバッファを指名する文字列である.  これは一意であること
     が保証される.  *Note Buffer Names::.

`save_modified'
     このフィールドは, バッファが最後に保存された時刻を整数で保持する.
     *Note Buffer Modification::.

`modtime'
     このフィールドは, 訪問しているファイルの更新時刻を保持している. 
     これはファイルを読み書きしたときに設定される.  バッファをファイル
     に書き込むたびに, このフィールドとファイルの更新時刻を比較する.
     *Note Buffer Modification::.

`auto_save_modified'
     このフィールドは, バッファを最後に自動保存した時刻を保持する.

`last_window_start'
     このフィールドは, バッファをウィンドウに最後に表示したときのバッ
     ファの`window-start'（表示開始）位置を保持する.

`undo_list'
     このフィールドは, バッファのアンドゥリストを保持する.  *Note
     Undo::.

`syntax_table_v'
     このフィールドは, バッファの構文テーブルを保持する.  *Note Syntax
     Tables::.

`downcase_table'
     このフィールドは, テキストを小文字に変換するための変換表を保持す
     る.  *Note Case Tables::.

`upcase_table'
     このフィールドは, テキストを大文字に変換するための変換表を保持す
     る.  *Note Case Tables::.

`case_canon_table'
     このフィールドは, 大文字小文字を区別しない探索のためにテキストを
     正則にするための変換表を保持する.  *Note Case Tables::.

`case_eqv_table'
     このフィールドは, 大文字小文字を区別しない探索のための同値テーブ
     ルを保持する.  *Note Case Tables::.

`display_table'
     このフィールドは, バッファの表示テーブルを保持する.  表示テーブル
     がなければ`nil'である.  *Note Display Tables::.

`markers'
     このフィールドは, バッファを現在指しているすべてのマーカの連鎖を
     保持している.  バッファからテキストを削除したり, バッファのギャッ
     プが移動すると, これらのマーカのおのおのを検査し更新する必要があ
     る.  *Note Markers::.

`backed_up'
     このフィールドは, このバッファで訪問しているファイルのバックアッ
     プファイルを作成したかどうかを表すフラグである.

`mark'
     このフィールドは, バッファのマークを保持する.  マークはマーカであ
     り, そのためリスト`markers'にも含まれている.  *Note The Mark::.

`mark_active'
     バッファのマークが活性であれば, このフィールドは`nil'以外である.

`local_var_alist'
     このフィールドは, このバッファにバッファローカルな変数を記述した
     連想リストを保持している.  バッファオブジェクトに特別な場所がある
     組み込みのバッファローカルな変数は含まない.  （それらはこの一覧で
     は省いた. ）*Note Buffer-Local Variables::.

`base_buffer'
     このフィールドは, （間接バッファであれば）バッファの基底バッファ, 
     あるいは, `nil'を保持する.

`keymap'
     このフィールドは, バッファのローカルキーマップを保持する.  *Note
     Keymaps::.

`overlay_center'
     このフィールドは, 現在のオーバレイの中央位置を保持する.  *Note
     Overlays::.

`overlays_before'
     このフィールドは, バッファの現在のオーバレイの中央位置かそれより
     まえで終るこのバッファのオーバレイのリストを保持している.  それら
     は終了位置が減る順に並んでいる.

`overlays_after'
     このフィールドは, バッファの現在のオーバレイの中央位置よりうしろ
     で終るこのバッファのオーバレイのリストを保持している.  それらは開
     始位置が増える順に並んでいる.

`enable_multibyte_characters'
     このフィールドは, `enable-multibyte-characters'のバッファローカル
     な値を保持しており, `t'か`nil'である.



File: elisp-ja, Node: Window Internals, Next: Process Internals, Prev: Buffer Internals, Up: Object Internals

ウィンドウの内部
----------------

ウィンドウには以下のような参照可能なフィールドがあります.

`frame'
     このウィンドウがあるフレーム.

`mini_p'
     このウィンドウがミニバッファ用ウィンドウであれば`nil'以外.

`buffer'
     このウィンドウで表示しているバッファ.  これはウィンドウの生存期間
     中にしばしば変化する.

`dedicated'
     このウィンドウがそのバッファ専用であると`nil'以外である.

`pointm'
     これは, このウィンドウが選択されていたときのカレントバッファのポ
     イント値である.  選択されていないときには, まえの値が保持される.

`start'
     ウィンドウに表示する最初の文字のバッファ内位置である.

`force_start'
     このフラグが`nil'以外であると, Lispプログラムが明示的にウィンドウ
     をスクロールしたことを表す.  ポイントがスクリーンからはみ出してい
     るとつぎの再表示の動作に影響する.  ポイントの周りのテキストをウィ
     ンドウに表示するようにスクロールするかわりに, スクリーン上に位置
     するようにポイントを移動する.

`last_modified'
     このウィンドウの最後の再表示が完了した時点でのウィンドウのバッファ
     のフィールド`modified'である.

`last_point'
     このウィンドウの最後の再表示が完了した時点でのバッファのポイント
     値である.

`left'
     コラム数で数えたウィンドウの左端である. 
     （スクリーンの最左端コラムは0コラム目. ）

`top'
     行数で数えたウィンドウの上端である. 
     （スクリーンの最上端行は0行目. ）

`height'
     行数で数えたウィンドウの高さ.

`width'
     コラム数で数えたウィンドウの幅.

`next'
     これは, 兄弟関係でつぎのウィンドウである.  兄弟関係で最右端か最下
     端であるウィンドウでは`nil'である.

`prev'
     これは, 兄弟関係でまえのウィンドウである.  兄弟関係で最左端か最上
     端であるウィンドウでは`nil'である.

`parent'
     内部的にはEmacsはウィンドウを木に並べている.  兄弟関係の各グルー
     プには親ウィンドウがあり, 親ウィンドウの領域はその兄弟すべての領
     域を含む.  このフィールドはウィンドウの親を指す.

     親ウィンドウはバッファを表示せず, その子ウィンドウの形以外には, 
     表示に関してはなんの役割も持たない.  Emacs Lispプログラムでは親ウィ
     ンドウを参照せず, バッファを実際に表示する木の葉にあるウィンドウ
     を操作する.

`hscroll'
     これは, ウィンドウの表示を水平方向左向きにスクロールしているコラ
     ム数.  これは普通は0である.

`use_time'
     これは, このウィンドウが選択されていた最後の時刻.  関数
     `get-lru-window'がこのフィールドを使う.

`display_table'
     ウィンドウの表示テーブル.  指定されていなければ`nil'である.

`update_mode_line'
     `nil'以外であると, ウィンドウのモード行を更新する必要があることを
     表す.

`base_line_number'
     バッファの特定の位置の行番号である.  あるいは`nil'.  これは, モー
     ド行にポイント位置の行番号を表示するために使われる.

`base_line_pos'
     行番号が既知のバッファ内位置.  既知でなければ`nil'である.

`region_showing'
     このウィンドウでリージョン（やその一部）を強調表示しているときに
     は, このフィールドは, 当該リージョンの一方の端を表すマーク位置を
     保持している.  さもなければこのフィールドは`nil'である.



File: elisp-ja, Node: Process Internals, Next: Standard Errors, Prev: Window Internals, Up: Object Internals

プロセスの内部
--------------

プロセスにはつぎのようなフィールドがあります.

`name'
     プロセスの名前である文字列.

`command'
     このプロセスを開始するために使用されたコマンド引数から成るリスト.

`filter'
     バッファのかわりにプロセスからの出力を受け取るために使用する関数. 
     あるいは`nil'.

`sentinel'
     プロセスがシグナルを受け取るたびに呼ばれる関数.  あるいは`nil'.

`buffer'
     プロセスに対応付けられたバッファ.

`pid'
     UNIXのプロセスIDである整数.

`childp'
     フラグであり, これが実際に子プロセスであると`nil'以外である.  ネッ
     トワーク接続であると`nil'以外.

`mark'
     プロセスからの最後の出力をバッファに挿入した箇所の末尾位置を表す
     マーカ.  これはしばしばバッファの末尾であるが, つねにではない.

`kill_without_query'
     これが`nil'以外であると, このプロセスが動作中にEmacsを終了しよう
     としてもプロセスをキルすることに関して確認を求めない.

`raw_status_low'
`raw_status_high'
     これらの2つのフィールドは, システムコール`wait'で返されるプロセス
     状態の各16ビットを記録する.

`status'
     `process-status'が返すべきプロセス状態.

`tick'
`update_tick'
     この2つのフィールドが等しくないと, 番兵を実行するかプロセスのバッ
     ファにメッセージを挿入するかして, プロセスの状態変化を報告する必
     要がある.

`pty_flag'
     サブプロセスとの通信にPTY（疑似端末）を使用している場合には`nil'
     以外であり, パイプを使用している場合には`nil'である.

`infd'
     このプロセスからの入力用ファイル記述子.

`outfd'
     このプロセスへの出力用ファイル記述子.

`subtty'
     サブプロセスが使用している端末のファイル記述子.  （これを記録する
     必要のないシステムもあり, その場合には値は`nil'である. ）

`tty_name'
     サブプロセスが使用している端末の名前.  パイプを使用しているときに
     は`nil'である.


File: elisp-ja, Node: Standard Errors, Next: Standard Buffer-Local Variables, Prev: GNU Emacs Internals, Up: Top

標準のエラー
************

以下は, 概念ごとにまとめた標準Emacsのエラーシンボルの完全な一覧です. 
一覧には, 各シンボルの（シンボルの属性`error-message'にある）メッセー
ジとそのようなエラーが生起する場面の記述への相互参照を示しました.

各エラーシンボルには, 属性`error-conditions'があり, これはシンボルのリ
ストです.  通常, このリストは, エラーシンボルそのものとシンボル`error'
を含みます.  しばしば, 追加のシンボルも含みます.  それらは中間的な分類
種別であり, `error'より細分化したものですが, エラーシンボルそのものよ
りは大分類です.  たとえば, ファイル参照に関するすべてのエラーには, 条
件`file-error'が入っています.  以下で, 特定のエラーシンボルにおいて追
加のシンボルを言及していないときには, そのエラーには追加シンボルがない
ことを意味します.

特別な例外ですが, エラーシンボル`quit'には条件`error'がありません.  こ
れは, 中断（quit）をエラーとみなさないからです.

エラーが生起する場面とその処理方法については, *Note Errors::.

`シンボル'
     文字列; 参照.

`error'
     `"error"' *Note Errors::.

`quit'
     `"Quit"' *Note Quitting::.

`args-out-of-range'
     `"Args out of range"' *Note Sequences Arrays Vectors::.

`arith-error'
     `"Arithmetic error"' *Note Numbers::の`/'と`%'を参照.

`beginning-of-buffer'
     `"Beginning of buffer"' *Note Motion::.

`buffer-read-only'
     `"Buffer is read-only"' *Note Read Only Buffers::.

`cyclic-function-indirection'
     `"Symbol's chain of function indirections\ contains a loop"'
     *Note Function Indirection::.

`end-of-buffer'
     `"End of buffer"' *Note Motion::.

`end-of-file'
     `"End of file during parsing"'
     これはファイル入出力ではなくLispリーダに関連することなので, 
     `file-error'ではないことに注意. 
     *Note Input Functions::. 

`file-already-exists'
     これは`file-error'. 
     *Note Writing to Files::. 

`file-date-error'
     これは`file-error'の小分類. 
     `copy-file'で, 
     出力ファイルの最終更新日付の設定に失敗すると生起する. 
     *Note Changing Files::. 

`file-error'
     このエラーとその小分類にはエラー文字列がない. 
     エラー条件`file-error'があると, 
     データ項目のみからエラーメッセージを作るからである. 
     *Note Files::. 

`file-locked'
     これは`file-error'. 
     *Note File Locks::. 

`file-supersession'
     これは`file-error'. 
     *Note Modification Time::. 

`invalid-function'
     `"Invalid function"' *Note Classifying Lists::.

`invalid-read-syntax'
     `"Invalid read syntax"' *Note Input Functions::.

`invalid-regexp'
     `"Invalid regexp"' *Note Regular Expressions::.

`mark-inactive'
     `"Mark inactive"' *Note The Mark::.

`no-catch'
     `"No catch for tag"' *Note Catch and Throw::.

`scan-error'
     `"Scan error"'
     これは, 構文解析関数が不正な構文や対応していない括弧を
     みつけると生起する. 
     *Note List Motion::, および, *Note Parsing Expressions::. 

`search-failed'
     `"Search failed"' *Note Searching and Matching::.

`setting-constant'
     `"Attempt to set a constant symbol"'
 
     シンボル`nil'や`t', および, 
     `:'で始まる任意のシンボルは変更できない. 
     *Note Variables that Never Change: Constant Variables. 

`undefined-color'
     `"Undefined color"' *Note Color Names::.

`void-function'
     `"Symbol's function definition is void"' *Note Function Cells::.

`void-variable'
     `"Symbol's value as variable is void"' *Note Accessing
     Variables::.

`wrong-number-of-arguments'
     `"Wrong number of arguments"' *Note Classifying Lists::.

`wrong-type-argument'
     `"Wrong type argument"' *Note Type Predicates::.

`arith-error'の特別な場合に分類された以下の種類のエラーは, 数学関数を
不正に使ったときに特定のシステムで生起します.

`domain-error'
     `"Arithmetic domain error"' *Note Math Functions::.

`overflow-error'
     `"Arithmetic overflow error"' *Note Math Functions::.

`range-error'
     `"Arithmetic range error"' *Note Math Functions::.

`singularity-error'
     `"Arithmetic singularity error"' *Note Math Functions::.

`underflow-error'
     `"Arithmetic underflow error"' *Note Math Functions::.


File: elisp-ja, Node: Standard Buffer-Local Variables, Next: Standard Keymaps, Prev: Standard Errors, Up: Top

バッファローカルな変数
**********************

以下は, 各バッファにおいて, 自動的にバッファローカルになるEmacsの汎用
目的の変数一覧です.  ほとんどのものは, 設定したときにだけバッファロー
カルになります.  これらのごく少数は, 各バッファでつねにローカルになり
ます.  多くのLispパッケージで内部使用向けにこのような変数を定義します
が, それらすべてをここに示すことはしていません.

`abbrev-mode'
     *Note Abbrevs::.

`auto-fill-function'
     *Note Auto Filling::.

`buffer-auto-save-file-name'
     *Note Auto-Saving::.

`buffer-backed-up'
     *Note Backup Files::.

`buffer-display-count'
     *Note Displaying Buffers::.

`buffer-display-table'
     *Note Display Tables::.

`buffer-file-format'
     *Note Format Conversion::.

`buffer-file-name'
     *Note Buffer File Name::.

`buffer-file-number'
     *Note Buffer File Name::.

`buffer-file-truename'
     *Note Buffer File Name::.

`buffer-file-type'
     *Note MS-DOS File Types::.

`buffer-invisibility-spec'
     *Note Invisible Text::.

`buffer-offer-save'
     *Note Saving Buffers::.

`buffer-read-only'
     *Note Read Only Buffers::.

`buffer-saved-size'
     *Note Point::.

`buffer-undo-list'
     *Note Undo::.

`cache-long-line-scans'
     *Note Text Lines::.

`case-fold-search'
     *Note Searching and Case::.

`ctl-arrow'
     *Note Usual Display::.

`comment-column'
     *Note コメントの操作: (emacs-ja)Comments.

`default-directory'
     *Note System Environment::.

`defun-prompt-regexp'
     *Note List Motion::.

`enable-multibyte-characters'
     *Note Non-ASCII Characters::.

`fill-column'
     *Note Auto Filling::.

`goal-column'
     *Note ポイント位置を移動する: (emacs-ja)Moving Point.

`left-margin'
     *Note Indentation::.

`local-abbrev-table'
     *Note Abbrevs::.

`local-write-file-hooks'
     *Note Saving Buffers::.

`major-mode'
     *Note Mode Help::.

`mark-active'
     *Note The Mark::.

`mark-ring'
     *Note The Mark::.

`minor-modes'
     *Note Minor Modes::.

`mode-line-buffer-identification'
     *Note Mode Line Variables::.

`mode-line-format'
     *Note Mode Line Data::.

`mode-line-modified'
     *Note Mode Line Variables::.

`mode-line-process'
     *Note Mode Line Variables::.

`mode-name'
     *Note Mode Line Variables::.

`overwrite-mode'
     *Note Insertion::.

`paragraph-separate'
     *Note Standard Regexps::.

`paragraph-start'
     *Note Standard Regexps::.

`point-before-scroll'
     マウスコマンドとスクロールコマンドの通信に使う.

`require-final-newline'
     *Note Insertion::.

`selective-display'
     *Note Selective Display::.

`selective-display-ellipses'
     *Note Selective Display::.

`tab-width'
     *Note Usual Display::.

`truncate-lines'
     *Note Truncation::.

`vc-mode'
     *Note Mode Line Variables::.


File: elisp-ja, Node: Standard Keymaps, Next: Standard Hooks, Prev: Standard Buffer-Local Variables, Up: Top

標準のキーマップ
****************

以下のシンボルは, さまざまなキーマップの名前として使われています.  こ
れらの一部はEmacsの始動時に存在しますが, 他のものは関連するモードを使っ
たときにのみロードされます.  以下は, 完全な一覧ではありません.

これらのマップのほとんどすべては, ローカルマップとして使われます.  も
ちろん, 存在するモードの中で, グローバルキーマップを変更するのはVipモー
ドと端末（terminal）モードだけです.

`Buffer-menu-mode-map'
     バッファメニュー（buffer-menu）モードで使う完全なキーマップ.

`c-mode-map'
     Cモードで使う疎なキーマップ.

`command-history-map'
     コマンド履歴（command-history）モードで使う完全なキーマップ.

`ctl-x-4-map'
     プレフィックス`C-x 4'の下位コマンド用の疎なキーマップ.

`ctl-x-5-map'
     プレフィックス`C-x 5'の下位コマンド用の疎なキーマップ.

`ctl-x-map'
     `C-x'コマンド用の完全なキーマップ.

`debugger-mode-map'
     デバッガモードで使う完全なキーマップ.

`dired-mode-map'
     `dired-mode'バッファで使う完全なキーマップ.

`edit-abbrevs-map'
     `edit-abbrevs'で使う疎なキーマップ.

`edit-tab-stops-map'
     `edit-tab-stops'で使う疎なキーマップ.

`electric-buffer-menu-mode-map'
     エレクトリックバッファメニュー（electric-buffer-menu）モードで使
     う完全なキーマップ.

`electric-history-map'
     エレクトリックコマンド履歴（electric-command-history）モードで使
     う完全なキーマップ.

`emacs-lisp-mode-map'
     emacs-lispモードで使う疎なキーマップ.

`facemenu-menu'
     テキスト属性メニューを表示するキーマップ.

`facemenu-background-menu'
     テキスト属性メニューのBackground Colorサブメニューを表示するキー
     マップ.

`facemenu-face-menu'
     テキスト属性メニューのFaceサブメニューを表示するキーマップ.

`facemenu-foreground-menu'
     テキスト属性メニューのForeground Colorを表示するキーマップ.

`facemenu-indentation-menu'
     テキスト属性メニューのIndentaionサブメニューを表示するキーマップ.

`facemenu-justification-menu'
     テキスト属性メニューのJustificationサブメニューを表示するキーマッ
     プ.

`facemenu-special-menu'
     テキスト属性メニューのSpecial Propsサブメニューを表示するキーマッ
     プ.

`function-key-map'
     キーパッドやファンクションキーの変換用のキーマップ. 
     それらがなければ, この変数は空の疎なキーマップである. 
     *Note Translating Input::. 

`fundamental-mode-map'
     基本（fundamental）モード用のローカルキーマップ. 
     これは空であり, 変更すべきでない. 

`Helper-help-map'
     ヘルプユーティリティパッケージが使う完全なキーマップ. 
     この変数の値セルと関数セルには同一のキーマップが入っている. 

`Info-edit-map'
     infoの`e'コマンドで使う疎なキーマップ.

`Info-mode-map'
     infoコマンドを収めた疎なキーマップ.

`isearch-mode-map'
     インクリメンタルサーチ中に打鍵できる文字を定義するキーマップ.

`key-translation-map'
     キー変換用のキーマップ.  これは, `function-key-map'と違って, もと
     のキーバインディングに優先する.  *Note Translating Input::.

`lisp-interaction-mode-map'
     Lispモードで使う疎なキーマップ.

`lisp-mode-map'
     Lispモードで使う疎なキーマップ.

`menu-bar-edit-menu'
     メニューバーのEditメニューを表示するキーマップ.

`menu-bar-files-menu'
     メニューバーのFilesメニューを表示するキーマップ.

`menu-bar-help-menu'
     メニューバーのHelpメニューを表示するキーマップ.

`menu-bar-mule-menu'
     メニューバーのMuleメニューを表示するキーマップ.

`menu-bar-search-menu'
     メニューバーのSearchメニューを表示するキーマップ.

`menu-bar-tools-menu'
     メニューバーのToolsメニューを表示するキーマップ.

`mode-specific-map'
     `C-c'に続く文字用のキーマップ.  これはグローバルマップの中にある
     ことに注意.  このマップは実際にはモード固有ではない.  プレフィッ
     クスキー`C-c'の主要な使い方を記述する`C-h b'（`display-bindings'）
     において, ユーザーに有益なようにこの名前を選んだ.

`occur-mode-map'
     出現（occur）モードで使うローカルキーマップ.

`query-replace-map'
     `query-replace'やその関連コマンドの応答用に使うキーマップ.
     `y-or-n-p'や`map-y-or-n-p'もこれを使う.  このマップを使う関数は, 
     プレフィックスキーを使わない.  一度に1つのイベントを探す.

`text-mode-map'
     テキスト（text）モードで使う疎なキーマップ.

`view-mode-map'
     閲覧（view）モードで使う完全なキーマップ.


File: elisp-ja, Node: Standard Hooks, Next: Index, Prev: Standard Keymaps, Up: Top

標準のフック
************

以下は, Emacsから適切な場面に呼び出される関数を読者が指定するためのフッ
ク変数の一覧です.

これらのほとんどの変数の名前は`-hook'で終ります.  これらは,
`run-hooks'で実行される"ノーマルフック"（normal hooks）です.  そのよう
なフックの値は関数のリストです.  関数は引数なしで呼び出され, その値は
完全に無視します.  このようなフックに新たな関数を追加する推奨方法は,
`add-hook'を呼び出すことです.  フックの使い方について詳しくは, *Note
Hooks::.

`-hooks'や`-functions'で終る名前の変数は, 普通, "アブノーマルフック"
（abnormal hooks）です.  それらの値も関数のリストですが, それらの関数
は特別な方法（引数を渡したり, 戻り値を使用したり）で呼び出されます. 
これらの変数のごく少数は実際にはノーマルフックですが, ノーマルフックの
名前を`-hook'で終えるという慣行を確立するまえに命名したものです.

`-function'で終る名前の変数では, その値は1つの関数です.  （Emacsの旧版
では, ノーマルフックでないにも関わらず, `-hook'で終る名前の変数があっ
た.  しかしながら, それらはすべて改名した. ）


`activate-mark-hook'
`after-change-function'
`after-change-functions'
`after-init-hook'
`after-insert-file-functions'
`after-make-frame-hook'
`after-revert-hook'
`after-save-hook'
`auto-fill-function'
`auto-save-hook'
`before-change-function'
`before-change-functions'
`before-init-hook'
`before-make-frame-hook'
`before-revert-hook'
`blink-paren-function'
`buffer-access-fontify-functions'
`c-mode-hook'
`calendar-load-hook'
`change-major-mode-hook'
`command-history-hook'
`command-line-functions'
`comment-indent-function'
`deactivate-mark-hook'
`diary-display-hook'
`diary-hook'
`dired-mode-hook'
`disabled-command-hook'
`echo-area-clear-hook'
`edit-picture-hook'
`electric-buffer-menu-mode-hook'
`electric-command-history-hook'
`electric-help-mode-hook'
`emacs-lisp-mode-hook'
`find-file-hooks'
`find-file-not-found-hooks'
`first-change-hook'
`fortran-comment-hook'
`fortran-mode-hook'
`ftp-setup-write-file-hooks'
`ftp-write-file-hook'
`indent-mim-hook'
`initial-calendar-window-hook'
`kill-buffer-hook'
`kill-buffer-query-functions'
`kill-emacs-hook'
`kill-emacs-query-functions'
`LaTeX-mode-hook'
`ledit-mode-hook'
`lisp-indent-function'
`lisp-interaction-mode-hook'
`lisp-mode-hook'
`list-diary-entries-hook'
`local-write-file-hooks'
`m2-mode-hook'
`mail-mode-hook'
`mail-setup-hook'
`mark-diary-entries-hook'
`medit-mode-hook'
`menu-bar-update-hook'
`minibuffer-setup-hook'
`minibuffer-exit-hook'
`news-mode-hook'
`news-reply-mode-hook'
`news-setup-hook'
`nongregorian-diary-listing-hook'
`nongregorian-diary-marking-hook'
`nroff-mode-hook'
`outline-mode-hook'
`plain-TeX-mode-hook'
`post-command-hook'
`pre-abbrev-expand-hook'
`pre-command-hook'
`print-diary-entries-hook'
`prolog-mode-hook'
`protect-innocence-hook'
`redisplay-end-trigger-functions'
`rmail-edit-mode-hook'
`rmail-mode-hook'
`rmail-summary-mode-hook'
`scheme-indent-hook'
`scheme-mode-hook'
`scribe-mode-hook'
`shell-mode-hook'
`shell-set-directory-error-hook'
`suspend-hook'
`suspend-resume-hook'
`temp-buffer-show-function'
`term-setup-hook'
`terminal-mode-hook'
`terminal-mode-break-hook'
`TeX-mode-hook'
`text-mode-hook'
`today-visible-calendar-hook'
`today-invisible-calendar-hook'
`vi-mode-hook'
`view-hook'
`window-configuration-change-hook'
`window-scroll-functions'
`window-setup-hook'
`window-size-change-functions'
`write-contents-hooks'
`write-file-hooks'
`write-region-annotate-functions'









File: elisp-ja, Node: Index, Next: New Symbols, Prev: Standard Hooks, Up: Top

索引
****



* Menu:

* %:                            Arithmetic Operations.  109.
* +:                            Arithmetic Operations.  40.
* -:                            Arithmetic Operations.  50.
* *:                            Arithmetic Operations.  64.
* /:                            Arithmetic Operations.  75.
* `:                            Backquote.              4.
* =:                            Comparison of Numbers.  42.
* <:                            Comparison of Numbers.  50.
* >:                            Comparison of Numbers.  58.
* /=:                           Comparison of Numbers.  46.
* <=:                           Comparison of Numbers.  54.
* >=:                           Comparison of Numbers.  62.
* 式:                           Intro Eval.             14.
* 型:                           Lisp Data Types.        4.
* 数:                           Numbers.                4.
* 行:                           Text Lines.             4.
* 略語:                         Abbrevs.                4.
* 余り:                         Arithmetic Operations.  109.
* 剰余:                         Arithmetic Operations.  134.
* 配列:                         Arrays.                 4.
* 括弧:                         Blinking.               4.
* タブ:                         Character Type.         38.
* 改行:                         Character Type.         38.
* 復帰:                         Character Type.         38.
* 補完:                         Completion.             4.
* 括弧:                         Cons Cell Type.         32.
* `#$':                         Docs and Compilation.   47.
* 同値:                         Equality Predicates.    4.
* 評価:                         Evaluation.             4.
* 間接:                         Function Indirection.   4.
* 字形:                         Glyphs.                 5.
* 環境:                         Intro Eval.             44.
* 再帰:                         Iteration.              4.
* キー:                         Keymap Terminology.     4.
* 打鍵:                         Keymap Terminology.     4.
* 機能:                         Named Features.         4.
* 範囲:                         Not Intervals.          4.
* 整数:                         Numbers.                4.
* 中断:                         Quitting.               4.
* 乱数:                         Random Numbers.         4.
* 置換:                         Search and Replace.     4.
* 探索:                         Searching and Matching.  4.
* 番兵:                         Sentinels.              4.
* 集合:                         Sets And Lists.         4.
* 表示:                         Streams Intro.          4.
* 文字:                         Strings and Characters.  4.
* 行頭:                         Text Lines.             48.
* 述語:                         Type Predicates.        4.
* 変数:                         Variables.              4.
* 休止:                         Waiting.                4.
* 待機:                         Waiting.                4.
* 関数:                         What Is a Function.     15.
* 実行, :                       Subprocess Creation.    14.
* 略語表:                       Abbrevs.                4.
* パイプ:                       Asynchronous Processes.  63.
* 論理積:                       Bitwise Operations.     124.
* 論理和:                       Bitwise Operations.     157.
* 小文字:                       Case Conversion.        4.
* 大文字:                       Case Conversion.        4.
* 白文字:                       Character Type.         38.
* 導入列:                       Chars and Bytes.        5.
* コラム:                       Columns.                4.
* アトム:                       Cons Cell Type.         29.
* 夏時間:                       Daylight Savings.       4.
* 条件名:                       Error Symbols.          4.
* エラー:                       Errors.                 4.
* 式の値:                       Evaluation.             4.
* 無限大:                       Float Basics.           15.
* 空関数:                       Function Indirection.   4.
* 関数名:                       Function Names.         4.
* フック:                       Hooks.                  4.
* 字下げ:                       Indentation.            4.
* 桁溢れ:                       Integer Basics.         10.
* 副作用:                       Intro Eval.             50.
* キー列:                       Key Sequence Input.     11.
* 基本型:                       Lisp Data Types.        15.
* アトム:                       List-related Predicates.  16.
* リスト:                       Lists.                  4.
* ロード:                       Loading.                4.
* マクロ:                       Macros.                 4.
* マーカ:                       Markers.                4.
* モード:                       Modes.                  4.
* 真理値:                       nil and t.              4.
* 自然数:                       Predicates on Numbers.  27.
* 丸める:                       Rounding Operations.    4.
* 初期化:                       Start-up Summary.       4.
* バイト:                       Strings and Characters.  4.
* 文字列:                       Strings and Characters.  4.
* 表示名:                       Symbol Components.      10.
* 値セル:                       Symbol Components.      16.
* マーク:                       The Mark.               4.
* タイマ:                       Timers.                 4.
* ヒント:                       Tips.                   4.
* 変換表:                       Translation of Characters.  4.
* 継続行:                       Truncation.             4.
* 型述語:                       Type Predicates.        17.
* 型検査:                       Type Predicates.        4.
* リドゥ:                       Undo.                   4.
* マクロ:                       What Is a Function.     47.
* 無名関数:                     Anonymous Functions.    4.
* 引数束縛:                     Argument List.          4.
* 配列要素:                     Array Functions.        20.
* 自動保存:                     Auto-Saving.            4.
* 論理否定:                     Bitwise Operations.     191.
* 閉じ括弧:                     Blinking.               4.
* バッファ:                     Buffers.                4.
* 文字集合:                     Character Sets.         4.
* ベル文字:                     Character Type.         38.
* 垂直タブ:                     Character Type.         38.
* メタ文字:                     Character Type.         86.
* 行末変換:                     Coding System Basics.   16.
* 水平位置:                     Columns.                4.
* 自己挿入:                     Commands for Insertion.  15.
* コメント:                     Comments.               4.
* 実行速度:                     Compilation Tips.       4.
* 速度向上:                     Compilation Tips.       4.
* ポインタ:                     Cons Cell Type.         4.
* 空リスト:                     Cons Cell Type.         73.
* 制御構造:                     Control Structures.     4.
* 効率解析:                     Coverage Testing.       5.
* デバッガ:                     Debugger.               4.
* ブレーク:                     Debugger.               4.
* 変数定義:                     Defining Variables.     4.
* エラー名:                     Error Symbols.          4.
* フェイス:                     Faces.                  4.
* 書式定義:                     Format Conversion.      13.
* 記述形式:                     Format of Descriptions.  4.
* 数前置子:                     Formatting Strings.     95.
* 画面配置:                     Frame Configuration Type.  4.
* フレーム:                     Frames.                 4.
* 関数定義:                     Function Names.         4.
* イベント:                     Input Events.           4.
* 入力方式:                     Input Methods.          4.
* 端末入力:                     Input Modes.            4.
* 入力方式:                     Input Modes.            4.
* 位置引数:                     Interactive Codes.      78.
* フォーム:                     Intro Eval.             14.
* 反転表示:                     Inverse Video.          4.
* 強調表示:                     Inverse Video.          7.
* 繰り返し:                     Iteration.              4.
* キー探索:                     Key Lookup.             4.
* 関数本体:                     Lambda Components.      33.
* ラムダ式:                     Lambda Expressions.     4.
* データ型:                     Lisp Data Types.        4.
* 無限再帰:                     Local Variables.        100.
* 三角関数:                     Math Functions.         4.
* 数学関数:                     Math Functions.         4.
* ブール値:                     nil and t.              4.
* 丸め変換:                     Numeric Conversions.    4.
* `"', 表示:                    Output Functions.       8.
* `\', 表示:                    Output Functions.       8.
* 表示制限:                     Output Variables.       52.
* 解析状態:                     Parsing Expressions.    33.
* ポイント:                     Point.                  4.
* 前置引数:                     Prefix Command Arguments.  4.
* 入力構文:                     Printed Representation.  4.
* 表示表現:                     Printed Representation.  4.
* プロセス:                     Processes.              4.
* クォート:                     Quoting.                4.
* 強制終了:                     Recursive Editing.      29.
* レジスタ:                     Registers.              4.
* 正規表現:                     Regular Expressions.    4.
* `&', 置換:                    Replacing Match.        38.
* `\', 置換:                    Replacing Match.        48.
* 選択表示:                     Selective Display.      4.
* シグナル:                     Signals to Processes.   4.
* フォント:                     Some Terms.             12.
* 間接仕様:                     Specification List.     108.
* 汎用文字:                     Splitting Characters.   49.
* 読み取り:                     Streams Intro.          4.
* 文字配列:                     Strings and Characters.  4.
* 関数セル:                     Symbol Components.      23.
* シンボル:                     Symbols.                4.
* 構文解析:                     Syntax Tables.          4.
* 端末入力:                     Terminal Input.         4.
* 端末出力:                     Terminal Output.        4.
* テキスト:                     Text.                   4.
* 型の検査:                     Type Predicates.        17.
* 停止位置:                     Using Edebug.           32.
* スコープ:                     Variable Scoping.       9.
* 存続期間:                     Variable Scoping.       9.
* ベクトル:                     Vectors.                4.
* 空の変数:                     Void Variables.         4.
* 基本関数:                     What Is a Function.     21.
* コマンド:                     What Is a Function.     55.
* 画面配置:                     Window Configuration Type.  4.
* 記述, 関数:                   A Sample Function Description.  4.
* 同値性, 数:                   Comparison of Numbers.  4.
* 改行, 表示:                   Output Functions.       79.
* マーカ, 数:                   Overview of Markers.    30.
* 置換の`&':                    Replacing Match.        38.
* 置換の`\':                    Replacing Match.        48.
* 削除, 要素:                   Sets And Lists.         28.
* 置換, 文字:                   Substitution.           10.
* 関数の記述:                   A Sample Function Description.  4.
* 自動ロード:                   Autoload.               4.
* ウィンドウ:                   Basic Windows.          4.
* 論理シフト:                   Bitwise Operations.     14.
* 算術シフト:                   Bitwise Operations.     78.
* バッファ名:                   Buffer Names.           4.
* コンスする:                   Building Lists.         23.
* コンスセル:                   Building Lists.         4.
* コンパイル:                   Byte Compilation.       4.
* 関数の起動:                   Calling Functions.      4.
* 変更フック:                   Change Hooks.           4.
* 文字コード:                   Character Codes.        4.
* アルト文字:                   Character Type.         109.
* 文字の構文:                   Character Type.         21.
* エスケープ:                   Character Type.         38.
* ページ送り:                   Character Type.         38.
* イベント型:                   Classifying Events.     4.
* 文字の挿入:                   Commands for Insertion.  15.
* 数の同値性:                   Comparison of Numbers.  4.
* リスト構造:                   Cons Cells.             19.
* 頻度数計測:                   Coverage Testing.       5.
* ハッシュ化:                   Creating Symbols.       10.
* インターン:                   Creating Symbols.       19.
* 対話的関数:                   Defining Commands.      4.
* 削除とキル:                   Deletion.               5.
* タブの削除:                   Deletion.               56.
* 文字の表示:                   Describing Characters.  18.
* 説明文字列:                   Documentation.          4.
* `.', リスト:                  Dotted Pair Notation.   4.
* 遅延ロード:                   Dynamic Loading.        5.
* つぎの入力:                   Event Input Misc.       11.
* 入力の破棄:                   Event Input Misc.       70.
* マクロ展開:                   Expansion.              31.
* 生のバイト:                   Explicit Encoding.      9.
* ファイル名:                   File Names.             4.
* 正の無限大:                   Float Basics.           15.
* 負の無限大:                   Float Basics.           15.
* パディング:                   Formatting Strings.     95.
* 不正な関数:                   Function Indirection.   19.
* 自由リスト:                   Garbage Collection.     34.
* エラー記述:                   Handling Errors.        99.
* 祝祭日形式:                   Holiday Customizing.    31.
* 無限ループ:                   Infinite Loops.         4.
* マーク引数:                   Interactive Codes.      132.
* 再帰的評価:                   Intro Eval.             32.
* 完全なキー:                   Keymap Terminology.     4.
* 未定義キー:                   Keymap Terminology.     4.
* キーマップ:                   Keymaps.                4.
* ライブラリ:                   Loading.                4.
* 評価エラー:                   Local Variables.        100.
* 変数を隠す:                   Local Variables.        16.
* 現在の束縛:                   Local Variables.        36.
* マップ関数:                   Mapping Functions.      4.
* 履歴リスト:                   Minibuffer History.     4.
* 複雑な引数:                   Minibuffers.            4.
* モード変数:                   Minor Mode Conventions.  13.
* ナロイング:                   Narrowing.              4.
* オーバレイ:                   Overlays.               4.
* 括弧の深さ:                   Parsing Expressions.    23.
* 子プロセス:                   Processes.              4.
* 親プロセス:                   Processes.              4.
* シーケンス:                   Sequences Arrays Vectors.  4.
* 要素の削除:                   Sets And Lists.         28.
* 追悼記念祭:                   Sexp Diary Entries.     125.
* エラー通知:                   Signaling Errors.       4.
* 文字列探索:                   String Search.          4.
* 単語の探索:                   String Search.          58.
* 文字の置換:                   Substitution.           10.
* 括弧の構文:                   Syntax Class Table.     37.
* 構文記述子:                   Syntax Descriptors.     19.
* 構文クラス:                   Syntax Descriptors.     4.
* 構文フラグ:                   Syntax Flags.           4.
* `"', 文字列:                  Syntax for Strings.     5.
* `\', 文字列:                  Syntax for Strings.     5.
* エコー表示:                   The Echo Area.          4.
* エコー領域:                   The Echo Area.          4.
* キルリング:                   The Kill Ring.          4.
* リージョン:                   The Region.             4.
* 文字変換表:                   Translation of Characters.  4.
* アンロード:                   Unloading.              4.
* 引数記述子:                   Using Interactive.      10.
* 記述, マクロ:                 A Sample Function Description.  4.
* 記述例, 変数:                 A Sample Variable Description.  4.
* 連結, 文字列:                 Creating Strings.       83.
* 型, 編集向け:                 Editing Types.          4.
* 表記法, 記述:                 Evaluation Notation.    4.
* 表記法, 評価:                 Evaluation Notation.    4.
* 展開, マクロ:                 Expansion.              4.
* ループ, 無限:                 Infinite Loops.         4.
* 説明文, キー:                 Keys in Documentation.  4.
* 位置, マウス:                 Mouse Position.         4.
* 追跡, マウス:                 Mouse Tracking.         4.
* 接続, リスト:                 Rearrangement.          15.
* 連結, リスト:                 Rearrangement.          15.
* 逆順, リスト:                 Rearrangement.          62.
* 長さ, リスト:                 Sequence Functions.     15.
* 長さ, 文字列:                 Sequence Functions.     15.
* 改行, 文字列:                 Syntax for Strings.     12.
* 文字列の`"':                  Syntax for Strings.     5.
* 文字列の`\':                  Syntax for Strings.     5.
* マクロの記述:                 A Sample Function Description.  4.
* 変数の記述例:                 A Sample Variable Description.  4.
* バッチモード:                 Batch Mode.             4.
* 非対話的使用:                 Batch Mode.             4.
* ベルを鳴らす:                 Beeping.                4.
* 排他的論理和:                 Bitwise Operations.     174.
* 対応する括弧:                 Blinking.               4.
* リストの構築:                 Building Lists.         4.
* バイトコード:                 Byte Compilation.       4.
* 関数呼び出し:                 Calling Functions.      4.
* 大文字小文字:                 Case Conversion.        4.
* ヤンクの抑制:                 Changing Key Bindings.  142.
* キー列エラー:                 Changing Key Bindings.  44.
* スーパー文字:                 Character Type.         109.
* ハイパー文字:                 Character Type.         109.
* `?', 文字定数:                Character Type.         116.
* `\', 文字定数:                Character Type.         116.
* 文字定数, `?':                Character Type.         116.
* 文字定数, `\':                Character Type.         116.
* バイトと文字:                 Chars and Bytes.        4.
* 文字テーブル:                 Char-Tables.            4.
* 予約済みキー:                 Coding Conventions.     76.
* コマンド履歴:                 Command History.        4.
* プロファイル:                 Compilation Tips.       8.
* 条件付き評価:                 Conditionals.           4.
* 文字列の連結:                 Creating Strings.       83.
* デフォルト値:                 Default Value.          4.
* 対話ボックス:                 Dialog Boxes.           4.
* 禁止コマンド:                 Disabling Commands.     4.
* 表示テーブル:                 Display Tables.         5.
* 説明文の慣習:                 Documentation Basics.   4.
* ドット対記法:                 Dotted Pair Notation.   4.
* 編集向けの型:                 Editing Types.          4.
* 記述の表記法:                 Evaluation Notation.    4.
* 評価の表記法:                 Evaluation Notation.    4.
* マクロの展開:                 Expansion.              4.
* フィルタ関数:                 Filter Functions.       4.
* `%', 書式付け:                Formatting Strings.     20.
* 書式付け指定:                 Formatting Strings.     20.
* フィールド幅:                 Formatting Strings.     95.
* フレーム構成:                 Frame Configurations.   4.
* 端末フレーム:                 Frames.                 10.
* 空の関数セル:                 Function Cells.         27.
* 関数呼び出し:                 Function Forms.         4.
* 名前付き関数:                 Function Names.         4.
* 字形テーブル:                 Glyphs.                 8.
* ロードフック:                 Hooks for Loading.      4.
* ロードエラー:                 How Programs Do Loading.  58.
* 間接バッファ:                 Indirect Buffers.       4.
* 基底バッファ:                 Indirect Buffers.       4.
* 入力イベント:                 Input Events.           4.
* オーバフロー:                 Integer Basics.         10.
* キー列の入力:                 Key Sequence Input.     4.
* ラムダリスト:                 Lambda Components.      13.
* オブジェクト:                 Lisp Data Types.        4.
* リストの要素:                 List Elements.          4.
* ローカル束縛:                 Local Variables.        4.
* ローカル変数:                 Local Variables.        4.
* モードフック:                 Major Mode Conventions.  119.
* マッチデータ:                 Match Data.             4.
* メニューバー:                 Menu Bar.               4.
* ミニバッファ:                 Minibuffers.            4.
* マイナモード:                 Minor Modes.            4.
* モードヘルプ:                 Mode Help.              4.
* モード行構成:                 Mode Line Data.         4.
* マウスの位置:                 Mouse Position.         4.
* マウスの追跡:                 Mouse Tracking.         4.
* ワイドニング:                 Narrowing.              40.
* 型検査の内部:                 Object Internals.       20.
* 文字列の内側:                 Parsing Expressions.    51.
* クォート文字:                 Parsing Expressions.    59.
* 数値前置引数:                 Prefix Command Arguments.  4.
* 生の前置引数:                 Prefix Command Arguments.  4.
* ハッシュ記法:                 Printed Representation.  20.
* サブプロセス:                 Processes.              4.
* ピュアメモリ:                 Pure Storage.           4.
* クォート, `'':                Quoting.                13.
* リストの変更:                 Rearrangement.          4.
* リストの長さ:                 Sequence Functions.     15.
* 文字列の長さ:                 Sequence Functions.     15.
* 特殊イベント:                 Special Events.         5.
* 文字列の改行:                 Syntax for Strings.     12.
* `^', 正規表現:                Syntax of Regexps.      113.
* `$', 正規表現:                Syntax of Regexps.      136.
* `\', 正規表現:                Syntax of Regexps.      144.
* `|', 正規表現:                Syntax of Regexps.      160.
* `(', 正規表現:                Syntax of Regexps.      174.
* `)', 正規表現:                Syntax of Regexps.      174.
* `.', 正規表現:                Syntax of Regexps.      26.
* `*', 正規表現:                Syntax of Regexps.      32.
* `+', 正規表現:                Syntax of Regexps.      60.
* `?', 正規表現:                Syntax of Regexps.      67.
* `[', 正規表現:                Syntax of Regexps.      73.
* `]', 正規表現:                Syntax of Regexps.      73.
* 構文テーブル:                 Syntax Tables.          4.
* テキスト属性:                 Text Properties.        4.
* テキスト表現:                 Text Representations.   4.
* マークリング:                 The Mark.               4.
* アイドル状態:                 Timers.                 87.
* キー変換関数:                 Translating Input.      120.
* `$', 画面表示:                Truncation.             4.
* `\', 画面表示:                Truncation.             4.
* 行の折り返し:                 Truncation.             4.
* 白文字の削除:                 User-Level Deletion.    10.
* `*', 対話指定:                Using Interactive.      78.
* `@', 対話指定:                Using Interactive.      81.
* 動的スコープ:                 Variable Scoping.       9.
* 再表示の強制:                 Waiting.                25.
* 組み込み関数:                 What Is a Function.     21.
* 打鍵コマンド:                 What Is a Function.     69.
* 記述, コマンド:               A Sample Function Description.  4.
* 詰め込み, 自動:               Auto Filling.           4.
* 内部, バッファ:               Buffer Internals.       4.
* カテゴリ, 文字:               Categories.             4.
* 入力構文, 文字:               Character Type.         21.
* 表示表現, 文字:               Character Type.         21.
* キー, 予約済み:               Coding Conventions.     76.
* 履歴, コマンド:               Command History.        4.
* 評価, 条件付き:               Conditionals.           4.
* 図表示, リスト:               Cons Cell Type.         41.
* 箱表示, リスト:               Cons Cell Type.         41.
* 作成, バッファ:               Creating Buffers.       4.
* コピー, 文字列:               Creating Strings.       83.
* 定義, コマンド:               Defining Commands.      4.
* 削除, フレーム:               Deleting Frames.        4.
* リスト内の`.':                Dotted Pair Notation.   4.
* 詰め込み, 段落:               Filling.                32.
* フック, ロード:               Hooks for Loading.      4.
* エラー, ロード:               How Programs Do Loading.  58.
* 入力, プロセス:               Input to Processes.     4.
* 挿入, テキスト:               Insertion.              4.
* 補完, 対話指定:               Interactive Codes.      10.
* 削除, バッファ:               Killing Buffers.        4.
* 箱表示, リスト:               Lists as Boxes.         4.
* 変数, ローカル:               Local Variables.        4.
* ロード, モード:               Major Mode Conventions.  162.
* 関数群, モード:               Major Mode Conventions.  40.
* 略語表, モード:               Major Mode Conventions.  87.
* 比較, 更新時刻:               Modification Time.      4.
* 出力, プロセス:               Output from Processes.  4.
* 内部, プロセス:               Process Internals.      4.
* ソート, リスト:               Rearrangement.          96.
* 探索, 正規表現:               Regexp Search.          4.
* 評価, ベクトル:               Self-Evaluating Forms.  4.
* 評価, リテラル:               Self-Evaluating Forms.  4.
* 長さ, ベクトル:               Sequence Functions.     15.
* パラシャ, 毎週:               Sexp Diary Entries.     125.
* 評価, シンボル:               Symbol Forms.           4.
* 正規表現の`^':                Syntax of Regexps.      113.
* 行頭, 正規表現:               Syntax of Regexps.      127.
* 正規表現の`$':                Syntax of Regexps.      136.
* 正規表現の`\':                Syntax of Regexps.      144.
* 正規表現の`|':                Syntax of Regexps.      160.
* 正規表現の`(':                Syntax of Regexps.      174.
* 正規表現の`)':                Syntax of Regexps.      174.
* `\`', 正規表現:               Syntax of Regexps.      230.
* `\'', 正規表現:               Syntax of Regexps.      235.
* `\=', 正規表現:               Syntax of Regexps.      240.
* `\<', 正規表現:               Syntax of Regexps.      258.
* 正規表現の`.':                Syntax of Regexps.      26.
* `\>', 正規表現:               Syntax of Regexps.      263.
* 正規表現の`*':                Syntax of Regexps.      32.
* 正規表現の`+':                Syntax of Regexps.      60.
* 正規表現の`?':                Syntax of Regexps.      67.
* 正規表現の`[':                Syntax of Regexps.      73.
* 正規表現の`]':                Syntax of Regexps.      73.
* 参照, 環境変数:               System Environment.     94.
* 比較, 辞書式順:               Text Comparison.        38.
* 同値性, 文字列:               Text Comparison.        4.
* 属性, テキスト:               Text Properties.        4.
* 画面表示の`$':                Truncation.             4.
* 画面表示の`\':                Truncation.             4.
* コマンドの記述:               A Sample Function Description.  4.
* アドバイス断片:               Advising Functions.     10.
* 引数を束縛する:               Argument List.          4.
* 非同期プロセス:               Asynchronous Processes.  4.
* バックトラック:               Backtracking.           5.
* 端末スクリーン:               Basic Windows.          64.
* 釣り合った括弧:               Blinking.               4.
* ブールベクトル:               Bool-Vectors.           4.
* バッファの内部:               Buffer Internals.       4.
* バッファの変更:               Buffer Modification.    4.
* リストのコピー:               Building Lists.         53.
* 文字のカテゴリ:               Categories.             4.
* ファイルの改名:               Changing Files.         4.
* ファイルの削除:               Changing Files.         4.
* 文字の入力構文:               Character Type.         21.
* 文字の表示表現:               Character Type.         21.
* バックスペース:               Character Type.         38.
* 専用ウィンドウ:               Choosing Window.        154.
* エラーの後始末:               Cleanups.               11.
* 後始末フォーム:               Cleanups.               11.
* 文字コード変換:               Coding System Basics.   5.
* コラムを数える:               Columns.                4.
* 複雑なコマンド:               Command History.        4.
* コマンド行引数:               Command Line Arguments.  4.
* コマンドループ:               Command Loop.           4.
* 現在のコマンド:               Command Loop Info.      26.
* `;', コメント内:              Comments.               4.
* コンパイル関数:               Compilation Functions.  4.
* リストの図表示:               Cons Cell Type.         41.
* リストの箱表示:               Cons Cell Type.         41.
* `(...)', リスト:              Cons Cell Type.         73.
* バッファの作成:               Creating Buffers.       4.
* 文字列のコピー:               Creating Strings.       83.
* シンボルを読む:               Creating Symbols.       4.
* バッファを選ぶ:               Current Buffer.         4.
* コマンドの定義:               Defining Commands.      4.
* 関数を定義する:               Defining Functions.     4.
* メニューの定義:               Defining Menus.         4.
* フレームの削除:               Deleting Frames.        4.
* プロセスの削除:               Deleting Processes.     4.
* イベントの表示:               Describing Characters.  18.
* メタ文字の表示:               Describing Characters.  18.
* ディレクトリ名:               Directory Names.        4.
* バッファの表示:               Displaying Buffers.     4.
* エラーシンボル:               Error Symbols.          4.
* インタープリタ:               Evaluation.             4.
* 入力を覗き見る:               Event Input Misc.       11.
* マクロ呼び出し:               Expansion.              4.
* フェイス識別子:               Faces.                  9.
* 日誌用バッファ:               Fancy Diary Display.    10.
* パーミッション:               File Attributes.        12.
* ファイルの属性:               File Attributes.        12.
* ファイルロック:               File Locks.             4.
* 段落の詰め込み:               Filling.                32.
* フロー制御文字:               Flow Control.           4.
* 疎なキーマップ:               Format of Keymaps.      4.
* メタ文字の探索:               Format of Keymaps.      48.
* メモリ割り当て:               Garbage Collection.     5.
* グローバル変数:               Global Variables.       4.
* エラーハンドラ:               Handling Errors.        4.
* ノーマルフック:               Hooks.                  11.
* 水平スクロール:               Horizontal Scrolling.   4.
* 初期化ファイル:               Init File.              4.
* インライン関数:               Inline Functions.       4.
* 入力フォーカス:               Input Focus.            4.
* 入力ストリーム:               Input Streams.          4.
* プロセスの入力:               Input to Processes.     4.
* テキストの挿入:               Insertion.              4.
* 対話的呼び出し:               Interactive Call.       4.
* リージョン引数:               Interactive Codes.      160.
* 実行時スタック:               Internals of Debugger.  18.
* 大文字のキー列:               Key Sequence Input.     44.
* キーのバインド:               Keymap Terminology.     4.
* バッファの削除:               Killing Buffers.        4.
* ヘッダコメント:               Library Headers.        4.
* 要素（リスト）:               Lists.                  4.
* 変数制限エラー:               Local Variables.        100.
* グローバル束縛:               Local Variables.        4.
* アンドゥのオフ:               Maintaining Undo.       26.
* モードのロード:               Major Mode Conventions.  162.
* モードの関数群:               Major Mode Conventions.  40.
* モードの略語表:               Major Mode Conventions.  87.
* メジャーモード:               Major Modes.            4.
* マーカの挿入型:               Marker Insertion Types.  5.
* 引数の読み取り:               Minibuffers.            4.
* モード行の書式:               Mode Line Format.       4.
* 更新時刻の比較:               Modification Time.      4.
* 廃れたバッファ:               Modification Time.      48.
* 機能を提供する:               Named Features.         4.
* 機能を要求する:               Named Features.         4.
* 非ローカル脱出:               Nonlocal Exits.         4.
* プロセスの出力:               Output from Processes.  4.
* 出力ストリーム:               Output Streams.         4.
* エスケープ文字:               Output Variables.       11.
* オーバレイ矢印:               Overlay Arrow.          4.
* マーカの再配置:               Overview of Markers.    17.
* コメントの内側:               Parsing Expressions.    56.
* ポインタの形状:               Pointer Shapes.         4.
* 循環構造の出力:               Printing in Edebug.     5.
* プロセスの内部:               Process Internals.      4.
* プログラム補完:               Programmed Completion.  4.
* リストのソート:               Rearrangement.          96.
* 再帰編集の終了:               Recursive Editing.      29.
* 再帰編集レベル:               Recursive Editing.      4.
* 評価の一時休止:               Recursive Editing.      59.
* 正規表現の探索:               Regexp Search.          4.
* 絶対ファイル名:               Relative File Names.    4.
* 相対ファイル名:               Relative File Names.    4.
* ベクトルの評価:               Self-Evaluating Forms.  4.
* リテラルの評価:               Self-Evaluating Forms.  4.
* プロセスの番兵:               Sentinels.              4.
* ベクトルの長さ:               Sequence Functions.     15.
* リストのメンバ:               Sets And Lists.         17.
* たそがれの時刻:               Sexp Diary Entries.     125.
* シグナルを送る:               Signals to Processes.   4.
* フレームサイズ:               Size and Position.      4.
* ジオメトリ指定:               Size and Position.      74.
* 文字列から数へ:               String Conversion.      56.
* アンドゥの抑制:               Substitution.           13.
* 属性リストセル:               Symbol Components.      32.
* シンボルの評価:               Symbol Forms.           4.
* `\', シンボル内:              Symbol Type.            17.
* コメントの構文:               Syntax Class Table.     100.
* 正規表現の`\`':               Syntax of Regexps.      230.
* 正規表現の`\'':               Syntax of Regexps.      235.
* 正規表現の`\=':               Syntax of Regexps.      240.
* 正規表現の`\<':               Syntax of Regexps.      258.
* 正規表現の`\>':               Syntax of Regexps.      263.
* テキストの解析:               Syntax Tables.          4.
* 環境変数の参照:               System Environment.     94.
* ファイルの古さ:               Testing Accessibility.  75.
* バッファの内容:               Text.                   20.
* 辞書式順の比較:               Text Comparison.        38.
* 文字列の同値性:               Text Comparison.        4.
* バッファリスト:               The Buffer List.        4.
* フロー制御の例:               Translating Input.      49.
* ファイルの実名:               Truenames.              4.
* 引数プロンプト:               Using Interactive.      55.
* 垂直スクロール:               Vertical Scrolling.     4.
* 可視なフレーム:               Visibility of Frames.   4.
* ファイルを探す:               Visiting Files.         4.
* ウィンドウ構成:               Window Configurations.  4.
* カットバッファ:               Window System Selections.  41.
* 基本関数の内部:               Writing Emacs Primitives.  4.
* アドバイス, 関数:             Advising Functions.     4.
* 評価, マクロ引数:             Argument Evaluation.    53.
* プロセス, 非同期:             Asynchronous Processes.  4.
* スクリーン, 端末:             Basic Windows.          64.
* 疑問符, 文字定数:             Character Type.         116.
* 文字定数, 疑問符:             Character Type.         116.
* 同値性, シンボル:             Creating Symbols.       31.
* 順序, ウィンドウ:             Cyclic Window Ordering.  4.
* アドバイス, 事後:             Defining Advice.        20.
* アドバイス, 事前:             Defining Advice.        20.
* アドバイス, 包囲:             Defining Advice.        20.
* アドバイス, 定義:             Defining Advice.        4.
* 定義, アドバイス:             Defining Advice.        4.
* デバッグ, エラー:             Error Debugging.        4.
* 例, 構文テーブル:             Example Major Modes.    58.
* ロック, ファイル:             File Locks.             4.
* 補完, ファイル名:             File Name Completion.   4.
* 詰め込み, 明示的:             Filling.                4.
* 書式付け, 文字列:             Formatting Strings.     4.
* 説明文字列, 関数:             Function Documentation.  4.
* 変数, グローバル:             Global Variables.       4.
* 中断, 無限ループ:             Infinite Loops.         4.
* 停止, 無限ループ:             Infinite Loops.         4.
* 継承, キーマップ:             Inheritance and Keymaps.  4.
* キー, 説明文字列:             Keys in Documentation.  4.
* 移動, リスト単位:             List Motion.            4.
* 表記法, 結果表示:             Printing Notation.      4.
* 長さ, シーケンス:             Sequence Functions.     15.
* 要素, シーケンス:             Sequence Functions.     33.
* サイズ, フレーム:             Size and Position.      4.
* ソート, テキスト:             Sorting.                4.
* キーマップ, 文字:             Special Properties.     39.
* 分割, ウィンドウ:             Splitting Windows.      4.
* 引数, プログラム:             Subprocess Creation.    31.
* コピー, ベクトル:             Vector Functions.       32.
* スクロール, 垂直:             Vertical Scrolling.     4.
* 内部, ウィンドウ:             Window Internals.       4.
* 活性なキーマップ:             Active Keymaps.         4.
* マクロ引数の評価:             Argument Evaluation.    53.
* 自動ロードエラー:             Autoload.               71.
* 複数のウィンドウ:             Basic Windows.          51.
* ビットごとの否定:             Bitwise Operations.     191.
* ブレークポイント:             Breakpoints.            5.
* バイトコード関数:             Byte-Code Objects.      4.
* ファンクショナル:             Calling Functions.      75.
* ファイルのコピー:             Changing Files.         4.
* ファイルのリンク:             Changing Files.         4.
* メタ文字キー定数:             Changing Key Bindings.  15.
* 再バインディング:             Changing Key Bindings.  4.
* コントロール文字:             Character Type.         56.
* 次元（文字集合）:             Chars and Bytes.        5.
* 文字テーブルの親:             Char-Tables.            20.
* クリックイベント:             Click Events.           4.
* カバレッジテスト:             Coverage Testing.       5.
* キーマップの作成:             Creating Keymaps.       4.
* シンボルの同値性:             Creating Symbols.       31.
* カレントバッファ:             Current Buffer.         4.
* アドバイスクラス:             Defining Advice.        20.
* ウィンドウの削除:             Deleting Windows.       4.
* 直前の文字を削除:             Deletion.               44.
* 説明文字列を書く:             Documentation Basics.   4.
* ドラッグイベント:             Drag Events.            4.
* 関数の動的ロード:             Dynamic Loading.        5.
* エラーのデバッグ:             Error Debugging.        4.
* 構文テーブルの例:             Example Major Modes.    58.
* エクスカージョン:             Excursions.             4.
* テキストの符号化:             Explicit Encoding.      4.
* テキストの復号化:             Explicit Encoding.      4.
* 日誌項目のソート:             Fancy Diary Display.    27.
* プロセスフィルタ:             Filter Functions.       4.
* ファイル書式変換:             Format Conversion.      5.
* キーマップの形式:             Format of Keymaps.      4.
* 完全なキーマップ:             Format of Keymaps.      4.
* 文字列の書式付け:             Formatting Strings.     4.
* 関数の説明文字列:             Function Documentation.  4.
* エラーを処理する:             Handling Errors.        4.
* 無限ループの中断:             Infinite Loops.         4.
* 無限ループの停止:             Infinite Loops.         4.
* キーマップの継承:             Inheritance and Keymaps.  4.
* 評価済みの式引数:             Interactive Codes.      190.
* 対話コード記述子:             Interactive Codes.      4.
* 呼び出しスタック:             Internals of Debugger.  18.
* 不可視なテキスト:             Invisible Text.         5.
* キーマップの項目:             Key Lookup.             4.
* キーボードマクロ:             Keyboard Macros.        4.
* リスト単位の移動:             List Motion.            4.
* ローカル変数束縛:             Local Variables.        4.
* メニューの定義例:             Menu Example.           4.
* 制限（バッファ）:             Narrowing.              4.
* ネットワーク接続:             Network.                4.
* マルチバイト文字:             Non-ASCII Characters.   4.
* 数としてのマーカ:             Overview of Markers.    30.
* 括弧による字下げ:             Parsing Expressions.    68.
* 結果表示の表記法:             Printing Notation.      4.
* リストを接続する:             Rearrangement.          15.
* リストを連結する:             Rearrangement.          15.
* ドリブルファイル:             Recording Input.        16.
* ミニバッファ入力:             Recursive Editing.      23.
* 繰り返しイベント:             Repeat Events.          4.
* ロードの繰り返し:             Repeated Loading.       4.
* 変換せずに丸める:             Rounding Operations.    4.
* ウィンドウを探す:             Selecting Windows.      37.
* ウィンドウの選択:             Selecting Windows.      4.
* シーケンスの長さ:             Sequence Functions.     15.
* シーケンスの要素:             Sequence Functions.     33.
* 月始めの特別礼拝:             Sexp Diary Entries.     125.
* プロセスシグナル:             Signals to Processes.   4.
* スクリーンサイズ:             Size and Position.      4.
* ウィンドウサイズ:             Size of Window.         4.
* 文字群の飛び越し:             Skipping Characters.    4.
* テキストのソート:             Sorting.                4.
* 文字のキーマップ:             Special Properties.     39.
* 読み出し専用文字:             Special Properties.     52.
* ウィンドウの分割:             Splitting Windows.      4.
* 標準的な正規表現:             Standard Regexps.       4.
* 文字から文字列へ:             String Conversion.      19.
* 文字列から文字へ:             String Conversion.      24.
* 整数から文字列へ:             String Conversion.      41.
* プログラムの実行:             Subprocess Creation.    14.
* プログラムの引数:             Subprocess Creation.    31.
* 同期サブプロセス:             Synchronous Processes.  4.
* 正規表現の選択肢:             Syntax of Regexps.      160.
* 端末固有の初期化:             Terminal-Specific.      4.
* ファイル更新時刻:             Testing Accessibility.  75.
* `?', ミニバッファ:            Text from Minibuffer.   165.
* ミニバッファ, `?':            Text from Minibuffer.   165.
* トレースバッファ:             Trace Buffer.           4.
* 実名（ファイル）:             Truenames.              4.
* 引数評価フォーム:             Using Interactive.      33.
* ベクトルのコピー:             Vector Functions.       32.
* フレームの可視性:             Visibility of Frames.   4.
* 不可視なフレーム:             Visibility of Frames.   4.
* ウィンドウの内部:             Window Internals.       4.
* ウィンドウ内位置:             Window Point.           4.
* 記述例, オプション:           A Sample Variable Description.  4.
* 活性化, アドバイス:           Activation of Advice.   4.
* エラー, 自動ロード:           Autoload.               71.
* ` （リストの置換）:           Backquote.              4.
* コンパイル, マクロ:           Compilation Functions.  15.
* リスト内の`(...)':            Cons Cell Type.         73.
* 切り替え, バッファ:           Current Buffer.         4.
* クラス, アドバイス:           Defining Advice.        20.
* 関数, 対話的にする:           Defining Commands.      4.
* 評価, バッファ内容:           Eval.                   61.
* 評価, 関数フォーム:           Function Forms.         4.
* 関数間接, シンボル:           Function Indirection.   4.
* 読み取り, 対話引数:           Interactive Codes.      38.
* 文字列, キーマップ:           Key Lookup.             47.
* リスト, キーマップ:           Key Lookup.             58.
* キーマップ, モード:           Major Mode Conventions.  46.
* ディスプレイ, 複数:           Multiple Displays.      4.
* クォート文字, 表示:           Output Functions.       8.
* `''によるクォート:            Quoting.                13.
* 保存, テキスト属性:           Saving Properties.      4.
* コピー, シーケンス:           Sequence Functions.     54.
* サイズ, スクリーン:           Size and Position.      4.
* リサイズ, フレーム:           Size and Position.      4.
* サイズ, ウィンドウ:           Size of Window.         4.
* 大きさ, ウィンドウ:           Size of Window.         4.
* 変換, 文字と文字列:           String Conversion.      4.
* サブプロセス, 同期:           Synchronous Processes.  4.
* 二重引用符, 文字列:           Syntax for Strings.     5.
* 位置, ウィンドウ内:           Window Point.           4.
* オプションの記述例:           A Sample Variable Description.  4.
* アドバイスの活性化:           Activation of Advice.   4.
* 活性な表示テーブル:           Active Display Table.   4.
* ローカルキーマップ:           Active Keymaps.         4.
* 関数をクォートする:           Anonymous Functions.    81.
* 連想リストのコピー:           Association Lists.      163.
* タイル型ウィンドウ:           Basic Windows.          64.
* ビットごとの論理積:           Bitwise Operations.     124.
* ビットごとの論理和:           Bitwise Operations.     157.
* バッファファイル名:           Buffer File Name.       4.
* ウィンドウを調べる:           Buffers and Windows.    4.
* コンパイル済み関数:           Byte-Code Objects.      4.
* 保護されたフォーム:           Cleanups.               11.
* マクロのコンパイル:           Compilation Functions.  15.
* リストとコンスセル:           Cons Cells.             4.
* ユーザーオプション:           Defining Variables.     118.
* シンボルを定義する:           Definitions.            4.
* バッファの切り替え:           Displaying Buffers.     4.
* アドバイスの無効化:           Enabling Advice.        4.
* アドバイスの有効化:           Enabling Advice.        4.
* ユーザー定義エラー:           Error Symbols.          4.
* バッファ内容の評価:           Eval.                   61.
* 評価リストグループ:           Eval List.              44.
* 前置引数の読み戻し:           Event Input Misc.       19.
* フォーカスイベント:           Focus Events.           4.
* ウィンドウフレーム:           Frames.                 14.
* 関数フォームの評価:           Function Forms.         4.
* シンボルの関数間接:           Function Indirection.   4.
* ファンクションキー:           Function Keys.          5.
* イベントによる停止:           Global Break Condition.  5.
* アブノーマルフック:           Hooks.                  29.
* 関数入力ストリーム:           Input Streams.          27.
* コマンド履歴の記録:           Interactive Call.       38.
* 前置引数付きの実行:           Interactive Call.       68.
* キーバインディング:           Keymap Terminology.     4.
* 説明文字列内のキー:           Keys in Documentation.  4.
* コンスセルの箱表示:           Lists as Boxes.         4.
* 箱表示によるリスト:           Lists as Boxes.         4.
* マジックファイル名:           Magic File Names.       4.
* モードのキーマップ:           Major Mode Conventions.  46.
* メニューキーマップ:           Menu Keymaps.           4.
* ミニバッファの履歴:           Minibuffer History.     4.
* マイナモードの慣習:           Minor Mode Conventions.  4.
* 破壊的なリスト操作:           Modifying Lists.        4.
* モーションイベント:           Motion Events.          4.
* オブジェクトの内部:           Object Internals.       4.
* 関数出力ストリーム:           Output Streams.         23.
* ストリーム（表示）:           Output Streams.         4.
* まえの完全な部分式:           Parsing Expressions.    48.
* 位置（バッファ内）:           Positions.              4.
* プレフィックスキー:           Prefix Keys.            4.
* スペシャルフォーム:           Primitive Function Type.  4.
* フレームを奥に置く:           Raising and Lowering.   12.
* リストの順序の変更:           Rearrangement.          4.
* リストを逆順にする:           Rearrangement.          62.
* 順序を保ったソート:           Rearrangement.          96.
* 再帰コマンドループ:           Recursive Editing.      4.
* テキスト属性の保存:           Saving Properties.      4.
* 探索と大文字小文字:           Searching and Case.     4.
* 自己評価型フォーム:           Self-Evaluating Forms.  4.
* シーケンスのコピー:           Sequence Functions.     54.
* 集合としてのリスト:           Sets And Lists.         4.
* フレームのリサイズ:           Size and Position.      4.
* テキスト属性の継承:           Sticky Properties.      4.
* 文字と文字列の変換:           String Conversion.      4.
* シンボルの構成要素:           Symbol Components.      4.
* 文字列の二重引用符:           Syntax for Strings.     5.
* 正規表現による行頭:           Syntax of Regexps.      127.
* 構文テーブルの内部:           Syntax Table Internals.  4.
* リージョン内の行数:           Text Lines.             64.
* ユニバイトテキスト:           Text Representations.   12.
* トレイリングコード:           Text Representations.   17.
* リーディングコード:           Text Representations.   17.
* 入力イベントの変換:           Translating Input.      4.
* ファイルを訪問する:           Visiting Files.         4.
* ウィンドウの先頭行:           Window Start.           13.
* 不活性化, アドバイス:         Activation of Advice.   35.
* , （バッククォート）:         Backquote.              19.
* ファイル名, バッファ:         Buffer File Name.       4.
* 変更フラグ, バッファ:         Buffer Modification.    4.
* 評価, リストフォーム:         Classifying Lists.      4.
* 巡回順序, ウィンドウ:         Cyclic Window Ordering.  4.
* デバッグ, 特定の関数:         Function Debugging.     4.
* 挿入, ポイントのまえ:         Insertion.              5.
* コマンド, キーマップ:         Key Lookup.             42.
* シンボル, キーマップ:         Key Lookup.             82.
* 評価, マクロ呼び出し:         Macro Forms.            4.
* 構文テーブル, モード:         Major Mode Conventions.  76.
* エスケープ文字, 表示:         Output Functions.       8.
* 予約活性, アドバイス:         Preactivation.          4.
* 非印字文字, 読み取り:         Quoted Character Input.  12.
* 読み取り, パスワード:         Reading a Password.     4.
* コマンドループ, 再帰:         Recursive Editing.      4.
* 参照可能性, ファイル:         Testing Accessibility.  4.
* 保存, ウィンドウ情報:         Window Configurations.  4.
* ポイント, ウィンドウ:         Window Point.           4.
* アドバイスの不活性化:         Activation of Advice.   35.
* アドバイスの再活性化:         Activation of Advice.   55.
* グローバルキーマップ:         Active Keymaps.         4.
* バックアップファイル:         Backup Files.           4.
* バッファのファイル名:         Buffer File Name.       4.
* 訪問しているファイル:         Buffer File Name.       4.
* 複数の名前のファイル:         Changing Files.         21.
* エスケープシーケンス:         Character Type.         52.
* リストフォームの評価:         Classifying Lists.      4.
* コーディングシステム:         Coding Systems.         5.
* プログラムを計時する:         Compilation Tips.       8.
* ディレクトリ向け関数:         Contents of Directories.  4.
* 恒久的なローカル変数:         Creating Buffer-Local.  144.
* ウィンドウの巡回順序:         Cyclic Window Ordering.  4.
* デバッガコマンド一覧:         Debugger Commands.      4.
* クロージャは使えない:         Extent.                 30.
* 版番号（ファイル名）:         File Name Components.   4.
* ファイル書式の符号化:         Format Conversion.      5.
* ファイル書式の復号化:         Format Conversion.      5.
* 全面プロンプト文字列:         Format of Keymaps.      47.
* 特定の関数のデバッグ:         Function Debugging.     4.
* ガベッジコレクション:         Garbage Collection.     4.
* マーカ入力ストリーム:         Input Streams.          17.
* 文字列入力ストリーム:         Input Streams.          23.
* ポイントのまえへ挿入:         Insertion.              5.
* コマンド名の読み取り:         Interactive Call.       63.
* 生の前置引数の使い方:         Interactive Codes.      147.
* 数値前置引数の使い方:         Interactive Codes.      152.
* デフォルト引数文字列:         Interactive Codes.      22.
* キーマップ内の文字列:         Key Lookup.             47.
* キーマップ内のリスト:         Key Lookup.             58.
* 説明文内のキーの置換:         Keys in Documentation.  4.
* マクロ呼び出しの評価:         Macro Forms.            4.
* メジャーモードフック:         Major Mode Conventions.  119.
* モードの構文テーブル:         Major Mode Conventions.  76.
* マーカ出力ストリーム:         Output Streams.         16.
* コメントを飛び越える:         Parsing Expressions.    101.
* もっとも内側の括弧式:         Parsing Expressions.    44.
* マウスポインタの形状:         Pointer Shapes.         4.
* アドバイスの予約活性:         Preactivation.          4.
* フレームを手前に置く:         Raising and Lowering.   12.
* 読み出し専用バッファ:         Read Only Buffers.      4.
* 置換時の大文字小文字:         Replacing Match.        7.
* ウィンドウのリサイズ:         Resizing Windows.       4.
* バックトラックの阻止:         Specification List.     101.
* 正規表現のグループ化:         Syntax of Regexps.      174.
* 文字選択（正規表現）:         Syntax of Regexps.      73.
* ファイルの参照可能性:         Testing Accessibility.  4.
* マルチバイトテキスト:         Text Representations.   17.
* コーディングスタイル:         Tips.                   4.
* ウィンドウ情報の保存:         Window Configurations.  4.
* ウィンドウのポイント:         Window Point.           4.
* 変数, バッファローカル:       Buffer-Local Variables.  4.
* オプション, コマンド行:       Command Line Arguments.  32.
* コンパイル, ライブラリ:       Compilation Functions.  91.
* 省略形, ディレクトリ名:       Directory Names.        39.
* デバッグ, 関数呼び出し:       Function Debugging.     4.
* 文字, 対話指定のコード:       Interactive Codes.      4.
* キーマップ, キーマップ:       Key Lookup.             53.
* フォーム, トップレベル:       Loading.                14.
* ヘルプ, メジャーモード:       Mode Help.              4.
* 説明文, メジャーモード:       Mode Help.              4.
* 型, プログラミング向け:       Programming Types.      4.
* バッファ, 読み出し専用:       Read Only Buffers.      4.
* 変更, ウィンドウサイズ:       Resizing Windows.       4.
* 環境変数, サブプロセス:       Subprocess Creation.    43.
* ダブルクォート, 文字列:       Syntax for Strings.     5.
* 自動ロードする関数セル:       Autoload.               55.
* キーボードマクロの終了:       Beeping.                13.
* バッファローカルな変数:       Buffer-Local Variables.  4.
* ボタン押し下げイベント:       Button-Down Events.     4.
* 実行時スタック上のタグ:       Catch and Throw.        56.
* ファイルのハードリンク:       Changing Files.         21.
* ファイルのモードの設定:       Changing Files.         4.
* マウスクリックイベント:       Click Events.           4.
* クリック可能なテキスト:       Clickable Text.         4.
* コマンド行のオプション:       Command Line Arguments.  32.
* エディタコマンドループ:       Command Loop.           4.
* キルコマンドの繰り返し:       Command Loop Info.      34.
* バッファテキストの比較:       Comparing Text.         4.
* ライブラリのコンパイル:       Compilation Functions.  91.
* バッファの末尾のマーカ:       Creating Markers.       27.
* シンボル名のハッシュ化:       Creating Symbols.       10.
* コントロール文字の表示:       Describing Characters.  18.
* ディレクトリ名の省略形:       Directory Names.        39.
* 説明文字列の動的ロード:       Docs and Compilation.   4.
* マウスドラッグイベント:       Drag Events.            4.
* コマンドキー入力を待つ:       Event Input Misc.       46.
* キーボードマクロの終了:       Event Input Misc.       70.
* 関数呼び出しのデバッグ:       Function Debugging.     4.
* グローバルブレーク条件:       Global Break Condition.  5.
* 選択されているフレーム:       Input Focus.            4.
* バッファ入力ストリーム:       Input Streams.          12.
* ストリーム（読み取り）:       Input Streams.          4.
* キーボードマクロの実行:       Interactive Call.       47.
* コード, 対話指定, 記述子:     Interactive Codes.      4.
* キーマップ内のコマンド:       Key Lookup.             42.
* キーマップ内のシンボル:       Key Lookup.             82.
* 基本コード（入力文字）:       Keyboard Events.        10.
* 修飾ビット（入力文字）:       Keyboard Events.        10.
* トップレベルのフォーム:       Loading.                14.
* メジャーモードの説明文:       Mode Help.              4.
* バッファ出力ストリーム:       Output Streams.         11.
* 属性リストと連想リスト:       Plists and Alists.      5.
* 連想リストと属性リスト:       Plists and Alists.      5.
* ナロイング中のポイント:       Point.                  14.
* プレフィックスコマンド:       Prefix Keys.            90.
* プログラミング向けの型:       Programming Types.      4.
* クォートした文字の入力:       Quoted Character Input.  4.
* ダブルクリックイベント:       Repeat Events.          4.
* ウィンドウサイズの変更:       Resizing Windows.       4.
* ウィンドウの最小サイズ:       Resizing Windows.       63.
* テキスト文字のカテゴリ:       Special Properties.     10.
* 文字に対する変更フック:       Special Properties.     84.
* 文字変更に対するフック:       Special Properties.     84.
* スティッキテキスト属性:       Sticky Properties.      4.
* サブプロセスの環境変数:       Subprocess Creation.    43.
* ファイルオープンエラー:       Subroutines of Visiting.  36.
* 新規ファイルメッセージ:       Subroutines of Visiting.  36.
* 文字列のダブルクォート:       Syntax for Strings.     5.
* トランザクションキュー:       Transaction Queues.     4.
* コントロール文字の表示:       Usual Display.          43.
* ポイントを中央に揃える:       Vertical Scrolling.     108.
* アイコンにしたフレーム:       Visibility of Frames.   4.
* ユーザーへの問い合わせ:       Yes-or-No Queries.      4.
* 記述, スペシャルフォーム:     A Sample Function Description.  4.
* モード, 訪問したファイル:     Auto Major Mode.        63.
* 文字列, 説明文字列を書く:     Documentation Basics.   4.
* 表記法, エラーメッセージ:     Error Messages.         4.
* 記述子, 対話指定のコード:     Interactive Codes.      4.
* パーセント記号, モード行:     Mode Line Data.         28.
* コマンド, プレフィックス:     Prefix Keys.            90.
* テキスト属性, ファイル内:     Saving Properties.      4.
* 評価, スペシャルフォーム:     Special Forms.          4.
* バックスラッシュ, 文字列:     Syntax for Strings.     5.
* スペシャルフォームの記述:     A Sample Function Description.  4.
* 訪問したファイルのモード:     Auto Major Mode.        63.
* 選択されているウィンドウ:     Basic Windows.          4.
* ビットごとの排他的論理和:     Bitwise Operations.     174.
* テキスト変更向けのフック:     Change Hooks.           4.
* コントロール文字キー定数:     Changing Key Bindings.  15.
* キーバインディングの変更:     Changing Key Bindings.  4.
* バインディングの置き換え:     Changing Key Bindings.  95.
* 文字テーブルのサブタイプ:     Char-Tables.            12.
* 基底コーディングシステム:     Coding System Basics.   21.
* 変種コーディングシステム:     Coding System Basics.   21.
* マクロのバイトコンパイル:     Compiling Macros.       4.
* レジスタの減数フィールド:     Cons Cell Type.         4.
* レジスタの番地フィールド:     Cons Cell Type.         4.
* 別のバッファへ切り替える:     Current Buffer.         4.
* ミニバッファ用ウィンドウ:     Cyclic Window Ordering.  21.
* メニュープロンプト文字列:     Defining Menus.         4.
* ディレクトリのファイル名:     Directory Names.        4.
* エラーメッセージの表記法:     Error Messages.         4.
* マーカのエクスカージョン:     Excursions.             16.
* ファイル名を展開する関数:     File Name Expansion.    4.
* 文字列からオブジェクトへ:     Input Functions.        19.
* キーバインディングの解除:     Key Binding Commands.   38.
* プレフィックスキーの禁止:     Key Lookup.             100.
* キーマップ内のキーマップ:     Key Lookup.             53.
* ライブラリヘッダコメント:     Library Headers.        4.
* モード行のパーセント記号:     Mode Line Data.         28.
* マウスモーションイベント:     Motion Events.          4.
* 参照可能部分（バッファ）:     Narrowing.              4.
* オブジェクトから文字列へ:     Output Functions.       87.
* カレントバッファ内の位置:     Point.                  29.
* トリプルクリックイベント:     Repeat Events.          4.
* ファイル内のテキスト属性:     Saving Properties.      4.
* スペシャルフォームの評価:     Special Forms.          4.
* テキストのフェイスコード:     Special Properties.     18.
* 文字列のバックスラッシュ:     Syntax for Strings.     5.
* タームスクリプトファイル:     Terminal Output.        44.
* カレントバッファのマーク:     The Mark.               45.
* カレントスタックフレーム:     Using Debugger.         21.
* ウィンドウの内部ポイント:     Window Internals.       26.
* キルされたテキストの挿入:     Yank Commands.          10.
* ウィンドウ, 正確に制御する:   Buffers and Windows.    4.
* バックスラッシュ, 文字定数:   Character Type.         116.
* 文字定数, バックスラッシュ:   Character Type.         116.
* プロンプト文字列, メニュー:   Defining Menus.         4.
* 逆アセンブル, バイトコード:   Disassembly.            4.
* 有効化と無効化, アドバイス:   Enabling Advice.        4.
* コントロール文字, 読み取り:   Quoted Character Input.  12.
* メジャーモードのキーマップ:   Active Keymaps.         42.
* ファイルモード指定のエラー:   Auto Major Mode.        36.
* 文字テーブルのデフォルト値:   Char-Tables.            25.
* 文字テーブルの追加スロット:   Char-Tables.            4.
* バイトコードインタープリタ:   Compilation Functions.  113.
* ディレクトリ内のファイル名:   Contents of Directories.  4.
* インターンしてないシンボル:   Creating Symbols.       31.
* バイトコードの逆アセンブル:   Disassembly.            4.
* ポイントのエクスカージョン:   Excursions.             16.
* 字下げのためのタブストップ:   Indent Tabs.            4.
* デフォルトの初期化ファイル:   Init File.              13.
* ソース上のブレークポイント:   Source Breakpoints.     5.
* ポイント移動に対するフック:   Special Properties.     108.
* コーディングスタイルの標準:   Tips.                   4.
* ,@ （バッククォートとの組み合わせ）: Backquote.       38.
* 表記法, バッファ内のテキスト: Buffer Text Notation.   4.
* バッファ, ウィンドウで制御される: Buffers and Windows.  4.
* インタープリタ, バイトコード: Compilation Functions.  113.
* 継承, キーマップのバインディング: Inheritance and Keymaps.  4.
* シンボリックリンク, ファイル: Kinds of Files.         10.
* バッファローカルな変数, モード: Major Mode Conventions.  108.
* 作成方法, バックアップファイル: Rename or Copy.       4.
* バックスラッシュ, シンボル内: Symbol Type.            17.
* 読み出し専用バッファ, 対話指定: Using Interactive.    78.
* 文字定数, 8進数字:            Character Type.         116.
* バッククォート（リストの置換）: Backquote.            4.
* 繋ぎ合わせ（バッククォートとの組み合わせ）: Backquote.  38.
* 補完におけるオブジェクト配列: Basic Completion.       25.
* バッファ内のテキストの表記法: Buffer Text Notation.   4.
* バッファ内での大文字小文字変換: Case Changes.         4.
* キャピタライズ（先頭文字だけを大文字にする）: Case Conversion.  49.
* 不正なプレフィックスキーエラー: Changing Key Bindings.  44.
* 例, `commandp':               High-Level Completion.  76.
* 制御構造向けのスペシャルフォーム: Control Structures.  4.
* バケット（オブジェクト配列）: Creating Symbols.       10.
* 深い束縛（ディープバインディング, deep binding）: Impl of Scope.  4.
* 終了, Emacs:                  Getting Out.            4.
* 終了, Emacs:                  Killing Emacs.          4.
* 始動, Emacs:                  Start-up Summary.       4.
* 休止, Emacs:                  Suspending Emacs.       4.
* カスタマイズ, `.emacs':       Major Mode Conventions.  158.
* ウィンドウのエクスカージョン: Excursions.             29.
* カレントバッファのエクスカージョン: Excursions.       16.
* ファイル名の補完サブルーティン: File Name Completion.  4.
* ディレクトリ部分（ファイル名）: File Name Components.  4.
* 非ディレクトリ部分（ファイル名）: File Name Components.  4.
* キーマップのプロンプト文字列: Format of Keymaps.      47.
* デフォルトのキーバインディング: Format of Keymaps.    20.
* キーマップのバインディングの継承: Inheritance and Keymaps.  4.
* 例, `interactive':            Interactive Examples.   4.
* 自動的にバッファローカルにする: Intro to Buffer-Local.  37.
* ファイルのシンボリックリンク: Kinds of Files.         10.
* 移動, Lisp式:                 List Motion.            4.
* エラー, Lispの入れ子:         Eval.                   71.
* モードのバッファローカルな変数: Major Mode Conventions.  108.
* マイナモードを書くための慣習: Minor Mode Conventions.  4.
* メジャーモードについてのヘルプ: Mode Help.            4.
* テキストファイルとバイナリファイル: MS-DOS File Types.  4.
* バイナリファイルとテキストファイル: MS-DOS File Types.  4.
* ファイル型, MS-DOSとWindows:  MS-DOS File Types.      4.
* 非数値, NaN:                  Float Basics.           15.
* 文字のキーマップ（オーバレイ属性）: Overlay Properties.  128.
* マーカのガベッジコレクション: Overview of Markers.    23.
* 例, print:                    Output Streams.         44.
* バックアップファイルの作成方法: Rename or Copy.       4.
* 移動, S式単位:                List Motion.            4.
* オーメル（過ぎ越しの祝い）の回数: Sexp Diary Entries.  125.
* 浅い束縛（シャローバインディング, shallow binding）: Impl of Scope.  23.
* ミニバッファ, SPC:            Text from Minibuffer.   157.
* 編集に用いられる標準的な正規表現: Standard Regexps.   4.
* プログラムを探すディレクトリ: Subprocess Creation.    58.
* オペレーティングシステム環境: System Environment.     4.
* ミニバッファ, TAB:            Text from Minibuffer.   161.
* 例, `throw':                  Recursive Editing.      29.
* 例, `user-variable-p':        High-Level Completion.  105.
* ガベッジコレクションを抑制する: Writing Emacs Primitives.  13.
* 1+:                           Arithmetic Operations.  18.
* 1-:                           Arithmetic Operations.  37.
* 整数の10進表記:               String Conversion.      41.
* 整数の16進表記:               Formatting Strings.     66.
* 2の補数:                      Integer Basics.         37.
* 2C-mode-map:                  Prefix Keys.            49.
* 整数の8進表記:                Formatting Strings.     58.
* 8進数字文字定数:              Character Type.         116.
* 8進数字文字入力:              Quoted Character Input.  12.
* `\a':                         Character Type.         38.
* abbrev-expansion:             Abbrev Expansion.       18.
* abbreviate-file-name:         Directory Names.        66.
* abbrev-prefix-mark:           Abbrev Expansion.       28.
* abbrev-symbol:                Abbrev Expansion.       11.
* abort-recursive-edit:         Recursive Editing.      82.
* abs:                          Comparison of Numbers.  82.
* accept-process-output:        Accepting Output.       12.
* access-file:                  Testing Accessibility.  66.
* accessible-keymaps:           Scanning Keymaps.       10.
* acos:                         Math Functions.         19.
* active-minibuffer-window:     Minibuffer Misc.        53.
* ad-activate:                  Activation of Advice.   27.
* ad-activate-all:              Activation of Advice.   37.
* ad-activate-regexp:           Activation of Advice.   43.
* ad-add-advice:                Computed Advice.        11.
* 適応型詰め込み（adaptive-fill）モード: Adaptive Fill.  4.
* add-abbrev:                   Defining Abbrevs.       11.
* ad-deactivate:                Activation of Advice.   34.
* ad-deactivate-all:            Activation of Advice.   40.
* ad-deactivate-regexp:         Activation of Advice.   48.
* ad-define-subr-args:          Subr Arguments.         14.
* add-hook:                     Hooks.                  86.
* ad-disable-advice:            Enabling Advice.        21.
* ad-disable-regexp:            Enabling Advice.        33.
* add-name-to-file:             Changing Files.         21.
* add-text-properties:          Changing Properties.    22.
* add-to-invisibility-spec:     Invisible Text.         54.
* add-to-list:                  Setting Variables.      87.
* ad-enable-advice:             Enabling Advice.        25.
* ad-enable-regexp:             Enabling Advice.        37.
* ad-get-arg:                   Argument Access in Advice.  27.
* ad-get-args:                  Argument Access in Advice.  30.
* ad-set-arg:                   Argument Access in Advice.  33.
* ad-set-args:                  Argument Access in Advice.  36.
* ad-start-advice:              Activation of Advice.   62.
* ad-stop-advice:               Activation of Advice.   67.
* ad-update-regexp:             Activation of Advice.   53.
* 事後アドバイス（after-advice）: Defining Advice.      20.
* after-find-file:              Subroutines of Visiting.  32.
* after-string （オーバレイ属性）: Overlay Properties.  116.
* alist（連想リスト）:          Association Lists.      4.
* 連想リスト（alist）:          Association Lists.      4.
* all-christian-calendar-holidays: Holiday Customizing.  19.
* all-completions:              Basic Completion.       80.
* all-hebrew-calendar-holidays: Holiday Customizing.    19.
* all-islamic-calendar-holidays: Holiday Customizing.   19.
* and:                          Combining Conditions.   17.
* append:                       Building Lists.         53.
* append-to-file:               Writing to Files.       12.
* apply:                        Calling Functions.      51.
* `apply'とデバッグ:            Internals of Debugger.  59.
* appt-audible:                 Appt Customizing.       8.
* appt-delete-window-function:  Appt Customizing.       8.
* appt-display-duration:        Appt Customizing.       8.
* appt-display-mode-line:       Appt Customizing.       8.
* appt-disp-window-function:    Appt Customizing.       8.
* appt-message-warning-time:    Appt Customizing.       8.
* appt-msg-window:              Appt Customizing.       8.
* appt-visible:                 Appt Customizing.       8.
* apropos:                      Help Functions.         12.
* aref:                         Array Functions.        20.
* `arith-error'の例:            Handling Errors.        115.
* `arith-error', 除算:          Arithmetic Operations.  86.
* 除算の`arith-error':          Arithmetic Operations.  86.
* 包囲アドバイス（around-advice）: Defining Advice.     20.
* arrayp:                       Array Functions.        9.
* 非ASCII文字:                  Non-ASCII Characters.   4.
* ASCII文字コード:              Character Type.         4.
* aset:                         Array Functions.        32.
* ash:                          Bitwise Operations.     78.
* asin:                         Math Functions.         14.
* ask-user-about-lock:          File Locks.             40.
* ask-user-about-supersession-threat: Modification Time.  48.
* assoc:                        Association Lists.      54.
* assoc-default:                Association Lists.      147.
* assoc-ignore-case:            Text Comparison.        95.
* assoc-ignore-representation:  Text Comparison.        100.
* assq:                         Association Lists.      93.
* atan:                         Math Functions.         23.
* atom:                         List-related Predicates.  16.
* 改行と自動詰め込み（auto-fill）モード: Commands for Insertion.  38.
* 自動詰め込み（auto-filling）モード: Auto Filling.     4.
* autoload:                     Autoload.               23.
* auto-save-file-name-p:        Auto-Saving.            30.
* auto-save-mode:               Auto-Saving.            23.
* `\b':                         Character Type.         38.
* `\b', 正規表現:               Syntax of Regexps.      245.
* `\B', 正規表現:               Syntax of Regexps.      254.
* 正規表現の`\b':               Syntax of Regexps.      245.
* 正規表現の`\B':               Syntax of Regexps.      254.
* back-to-indentation:          Motion by Indent.       10.
* backtrace:                    Internals of Debugger.  18.
* backtrace-debug:              Internals of Debugger.  66.
* backtrace-frame:              Internals of Debugger.  83.
* backup-buffer:                Making Backups.         7.
* backup-file-name-p:           Backup Names.           11.
* backward-char:                Character Motion.       36.
* backward-delete-char-untabify: Deletion.              56.
* backward-list:                List Motion.            20.
* backward-prefix-chars:        Motion and Syntax.      23.
* backward-sexp:                List Motion.            49.
* backward-to-indentation:      Motion by Indent.       14.
* backward-word:                Word Motion.            22.
* barf-if-buffer-read-only:     Read Only Buffers.      50.
* batch-byte-compile:           Compilation Functions.  103.
* baud-rate:                    Terminal Output.        29.
* beep:                         Beeping.                18.
* 事前アドバイス（before-advice）: Defining Advice.     20.
* before-string （オーバレイ属性）: Overlay Properties.  109.
* beginning-of-buffer:          Buffer End Motion.      19.
* beginning-of-defun:           List Motion.            52.
* beginning-of-line:            Text Lines.             34.
* blink-matching-open:          Blinking.               26.
* bobp:                         Near Point.             54.
* bold （フェイス名）:          Standard Faces.         34.
* bold-italic （フェイス名）:   Standard Faces.         46.
* bolp:                         Near Point.             64.
* bool-vector-p:                Bool-Vectors.           19.
* boundp:                       Void Variables.         65.
* buffer-base-buffer:           Indirect Buffers.       37.
* buffer-disable-undo:          Maintaining Undo.       25.
* buffer-enable-undo:           Maintaining Undo.       16.
* buffer-end:                   Point.                  46.
* buffer-file-name:             Buffer File Name.       13.
* buffer-flush-undo:            Maintaining Undo.       26.
* buffer-list:                  The Buffer List.        23.
* buffer-local-variables:       Creating Buffer-Local.  72.
* Buffer-menu-mode-map:         Standard Keymaps.       15.
* buffer-modified-p:            Buffer Modification.    22.
* buffer-modified-tick:         Buffer Modification.    45.
* buffer-name:                  Buffer Names.           18.
* bufferp:                      Buffer Basics.          39.
* buffer-size:                  Point.                  50.
* buffer-string:                Buffer Contents.        39.
* buffer-substring:             Buffer Contents.        10.
* buffer-substring-no-properties: Buffer Contents.      35.
* bury-buffer:                  The Buffer List.        81.
* byte-code:                    Compilation Functions.  113.
* byte-code-function-p:         What Is a Function.     86.
* byte-compile:                 Compilation Functions.  30.
* byte-compile-file:            Compilation Functions.  66.
* byte-recompile-directory:     Compilation Functions.  91.
* caar:                         List Elements.          101.
* cadr:                         List Elements.          104.
* calendar-date-display-form:   Date Display Format.    4.
* calendar-daylight-savings-ends: Daylight Savings.     16.
* calendar-daylight-savings-ends-time: Daylight Savings.  54.
* calendar-daylight-savings-starts: Daylight Savings.   16.
* calendar-daylight-savings-starts-time: Daylight Savings.  54.
* calendar-daylight-time-offset: Daylight Savings.      51.
* calendar-holiday-marker:      Calendar Customizing.   28.
* calendar-holidays:            Holiday Customizing.    5.
* calendar-load-hook:           Calendar Customizing.   36.
* calendar-mark-today:          Calendar Customizing.   54.
* calendar-star-date:           Calendar Customizing.   49.
* calendar-time-display-form:   Time Display Format.    4.
* calendar-today-marker:        Calendar Customizing.   57.
* call-interactively:           Interactive Call.       32.
* call-process:                 Synchronous Processes.  27.
* call-process-region:          Synchronous Processes.  110.
* cancel-debug-on-entry:        Function Debugging.     57.
* cancel-timer:                 Timers.                 108.
* capitalize:                   Case Conversion.        49.
* capitalize-region:            Case Changes.           13.
* capitalize-word:              Case Changes.           49.
* car:                          List Elements.          7.
* car-safe:                     List Elements.          33.
* case-table-p:                 Case Tables.            57.
* catch:                        Catch and Throw.        56.
* category （テキスト属性）:    Special Properties.     10.
* category （オーバレイ属性）:  Overlay Properties.     34.
* category-docstring:           Categories.             35.
* category-set-mnemonics:       Categories.             87.
* category-table:               Categories.             49.
* category-table-p:             Categories.             52.
* CBREAK:                       Flow Control.           56.
* `C-c':                        Prefix Keys.            24.
* cdar:                         List Elements.          107.
* cddr:                         List Elements.          110.
* cdr:                          List Elements.          20.
* cdr-safe:                     List Elements.          46.
* ceiling:                      Numeric Conversions.    27.
* `C-g':                        Quitting.               4.
* `C-h':                        Prefix Keys.            20.
* 文字クォート（character:      Syntax Class Table.     77.
* char-after:                   Near Point.             11.
* char-before:                  Near Point.             22.
* char-bytes:                   Splitting Characters.   11.
* char-category-set:            Categories.             78.
* char-charset:                 Character Sets.         26.
* char-equal:                   Text Comparison.        7.
* char-or-string-p:             Predicates for Strings.  14.
* charset-dimension:            Chars and Bytes.        15.
* charset-list:                 Character Sets.         23.
* charsetp:                     Character Sets.         19.
* char-syntax:                  Syntax Table Functions.  58.
* char-table-extra-slot:        Char-Tables.            58.
* char-table-p:                 Char-Tables.            38.
* char-table-parent:            Char-Tables.            51.
* char-table-range:             Char-Tables.            68.
* char-table-subtype:           Char-Tables.            42.
* char-to-string:               String Conversion.      19.
* char-valid-p:                 Character Codes.        15.
* char-width:                   Width.                  11.
* check-coding-system:          Lisp and Coding Systems.  18.
* checkdoc-minor-mode:          Documentation Tips.     5.
* christian-holidays:           Holiday Customizing.    5.
* cl:                           Lisp History.           25.
* CLに関した注意−−省略可能引数のデフォルト: Argument List.  43.
* CLに関した注意−−既存シンボルのインターン: Creating Symbols.  100.
* CLに関した注意−−オブジェクト配列内のシンボル: Creating Symbols.  55.
* CLに関した注意−−メモリ領域の追加: Garbage Collection.  41.
* CLに関した注意−−継続可能なエラーはない: Signaling Errors.  62.
* CLに関した注意−−スペシャルフォームの比較: Special Forms.  95.
* CLに関した注意−−大文字小文字の区別: Symbol Type.    31.
* CLに関した注意−−スペシャル変数: Variable Scoping.   23.
* clear-abbrev-table:           Abbrev Tables.          13.
* clear-visited-file-modtime:   Modification Time.      23.
* cl.el （edebug）:             Instrumenting.          35.
* CLに関した注意−−Emacsでは`throw'のみ: Catch and Throw.  50.
* CLに関した注意−−整数と`eq': Comparison of Numbers.  34.
* 閉じ括弧文字（close:          Syntax Class Table.     37.
* CLに関した注意−−`rplaca'と`setcar': Modifying Lists.  9.
* CLに関した注意−−`set'はローカル: Setting Variables.  77.
* cl-specs.el:                  Instrumenting.          35.
* CLに関した注意−−`union'と`intersection'の欠落: Sets And Lists.  11.
* c-mode-map:                   Standard Keymaps.       19.
* C-M-x:                        Instrumenting.          9.
* coding-system-change-eol-conversion: Lisp and Coding Systems.  23.
* coding-system-change-text-conversion: Lisp and Coding Systems.  29.
* coding-system-get:            Coding System Basics.   40.
* coding-system-list:           Lisp and Coding Systems.  9.
* coding-system-p:              Lisp and Coding Systems.  15.
* combine-after-change-calls:   Change Hooks.           33.
* command-execute:              Interactive Call.       47.
* command-history-map:          Standard Keymaps.       23.
* command-line:                 Command Line Arguments.  20.
* commandp:                     Interactive Call.       13.
* `commandp'の例:               High-Level Completion.  76.
* コメント終了（comment:        Syntax Class Table.     100.
* コメント開始（comment:        Syntax Class Table.     99.
* Common Lisp:                  Lisp History.           9.
* Common Lisp（edebug）:        Instrumenting.          35.
* compare-buffer-substrings:    Comparing Text.         10.
* compare-strings:              Text Comparison.        79.
* compare-window-configurations: Window Configurations.  77.
* compile-defun:                Compilation Functions.  61.
* completing-read:              Minibuffer Completion.  10.
* compute-motion:               Screen Lines.           59.
* concat:                       Creating Strings.       83.
* cond:                         Conditionals.           50.
* condition-case:               Handling Errors.        69.
* cons:                         Building Lists.         11.
* consp:                        List-related Predicates.  12.
* continue-process:             Signals to Processes.   73.
* Control-X-prefix:             Prefix Keys.            32.
* convert-standard-filename:    Standard File Names.    21.
* coordinates-in-window-p:      Coordinates and Windows.  16.
* copy-alist:                   Association Lists.      163.
* copy-category-table:          Categories.             59.
* copy-face:                    Face Functions.         19.
* copy-file:                    Changing Files.         73.
* copy-keymap:                  Creating Keymaps.       30.
* copy-marker:                  Creating Markers.       47.
* copy-region-as-kill:          Kill Functions.         32.
* copy-sequence:                Sequence Functions.     54.
* copy-syntax-table:            Syntax Table Functions.  16.
* cos:                          Math Functions.         10.
* `#@COUNT':                    Docs and Compilation.   47.
* count-lines:                  Text Lines.             64.
* count-loop:                   A Sample Function Description.  61.
* `C-q':                        Flow Control.           11.
* create-file-buffer:           Subroutines of Visiting.  11.
* create-fontset-from-fontset-spec: Fontsets.           15.
* `C-s':                        Flow Control.           11.
* ctl-x-4-map:                  Prefix Keys.            41.
* ctl-x-5-map:                  Prefix Keys.            45.
* ctl-x-map:                    Prefix Keys.            32.
* current-buffer:               Current Buffer.         87.
* current-case-table:           Case Tables.            68.
* current-column:               Columns.                19.
* current-fill-column:          Margins.                49.
* current-frame-configuration:  Frame Configurations.   11.
* current-global-map:           Active Keymaps.         73.
* current-indentation:          Primitive Indent.       11.
* current-input-mode:           Input Modes.            33.
* current-justification:        Filling.                109.
* current-kill:                 Low-Level Kill Ring.    12.
* current-left-margin:          Margins.                44.
* current-local-map:            Active Keymaps.         81.
* current-message:              The Echo Area.          59.
* current-minor-mode-maps:      Active Keymaps.         96.
* current-time:                 Time of Day.            24.
* current-time-string:          Time of Day.            9.
* current-time-zone:            Time of Day.            36.
* current-window-configuration: Window Configurations.  15.
* cust-print:                   Printing in Edebug.     5.
* `C-x':                        Prefix Keys.            32.
* `C-x 4':                      Prefix Keys.            41.
* `C-x 5':                      Prefix Keys.            45.
* `C-x 6':                      Prefix Keys.            49.
* `C-x RET':                    Prefix Keys.            37.
* `C-x v':                      Prefix Keys.            53.
* deactivate-mark:              The Mark.               130.
* debug:                        Invoking the Debugger.  9.
* debugger-mode-map:            Standard Keymaps.       39.
* debug-on-entry:               Function Debugging.     13.
* `debug-on-error'の利用:       Processing of Errors.   19.
* decode-coding-region:         Explicit Encoding.      50.
* decode-coding-string:         Explicit Encoding.      56.
* decode-time:                  Time Conversion.        105.
* defadvice:                    Defining Advice.        9.
* defalias:                     Defining Functions.     58.
* default （フェイス名）:       Standard Faces.         9.
* default-boundp:               Default Value.          26.
* `default.el':                 Start-up Summary.       47.
* default-file-modes:           Changing Files.         123.
* default-value:                Default Value.          20.
* defconst:                     Defining Variables.     94.
* defcustom:                    Variable Definitions.   9.
* def-edebug-spec:              Instrumenting Macro Calls.  17.
* defface:                      Defining Faces.         12.
* defgroup:                     Group Definitions.      22.
* &define （edebug）:           Specification List.     89.
* define-abbrev:                Defining Abbrevs.       20.
* define-abbrev-table:          Abbrev Tables.          17.
* define-category:              Categories.             28.
* define-derived-mode:          Derived Modes.          10.
* define-key:                   Changing Key Bindings.  37.
* define-key-after:             Modifying Menus.        12.
* define-logical-name:          Changing Files.         103.
* define-prefix-command:        Prefix Keys.            90.
* defmacro:                     Defining Macros.        16.
* defsubst:                     Inline Functions.       5.
* defun:                        Defining Functions.     10.
* defvar:                       Defining Variables.     23.
* delete:                       Sets And Lists.         87.
* delete-auto-save-file-if-necessary: Auto-Saving.      133.
* delete-backward-char:         Deletion.               44.
* delete-blank-lines:           User-Level Deletion.    94.
* delete-char:                  Deletion.               32.
* delete-directory:             Create/Delete Dirs.     15.
* delete-file:                  Changing Files.         85.
* delete-frame:                 Deleting Frames.        14.
* `delete-frame'イベント:       Misc Events.            7.
* イベント`delete-frame':       Misc Events.            7.
* delete-horizontal-space:      User-Level Deletion.    10.
* delete-indentation:           User-Level Deletion.    34.
* delete-other-windows:         Deleting Windows.       31.
* delete-overlay:               Managing Overlays.      28.
* delete-process:               Deleting Processes.     24.
* delete-region:                Deletion.               26.
* delete-to-left-margin:        Margins.                62.
* delete-window:                Deleting Windows.       25.
* delete-windows-on:            Deleting Windows.       38.
* delq:                         Sets And Lists.         28.
* describe-bindings:            Scanning Keymaps.       90.
* describe-buffer-case-table:   Case Tables.            88.
* describe-mode:                Mode Help.              12.
* describe-prefix-bindings:     Help Functions.         94.
* detect-coding-region:         Lisp and Coding Systems.  55.
* detect-coding-string:         Lisp and Coding Systems.  68.
* diary-anniversary:            Sexp Diary Entries.     11.
* diary-astro-day-number:       Sexp Diary Entries.     92.
* diary-cyclic:                 Sexp Diary Entries.     28.
* diary-date:                   Sexp Diary Entries.     45.
* diary-date-forms:             Diary Customizing.      28.
* diary-day-of-year:            Sexp Diary Entries.     92.
* diary-display-hook:           Fancy Diary Display.    4.
* diary-entry-marker:           Calendar Customizing.   28.
* diary-float:                  Sexp Diary Entries.     56.
* diary-french-date:            Sexp Diary Entries.     92.
* diary-hebrew-date:            Sexp Diary Entries.     92.
* diary-islamic-date:           Sexp Diary Entries.     92.
* diary-iso-date:               Sexp Diary Entries.     92.
* diary-julian-date:            Sexp Diary Entries.     92.
* diary-list-include-blanks:    Fancy Diary Display.    23.
* diary-mayan-date:             Sexp Diary Entries.     92.
* diary-omer:                   Sexp Diary Entries.     125.
* diary-parasha:                Sexp Diary Entries.     125.
* diary-phases-of-moon:         Sexp Diary Entries.     92.
* diary-remind:                 Sexp Diary Entries.     40.
* diary-rosh-hodesh:            Sexp Diary Entries.     125.
* diary-sabbath-candles:        Sexp Diary Entries.     125.
* diary-sunrise-sunset:         Sexp Diary Entries.     92.
* diary-yahrzeit:               Sexp Diary Entries.     125.
* digit-argument:               Prefix Command Arguments.  100.
* ding:                         Beeping.                13.
* directory-file-name:          Directory Names.        32.
* directory-files:              Contents of Directories.  15.
* dired-mode-map:               Standard Keymaps.       43.
* disable-command:              Disabling Commands.     36.
* disabled:                     Disabling Commands.     10.
* disassemble:                  Disassembly.            19.
* discard-input:                Event Input Misc.       70.
* display-buffer:               Choosing Window.        12.
* display-completion-list:      Completion Commands.    88.
* display-table-slot:           Display Table Format.   53.
* do-auto-save:                 Auto-Saving.            121.
* `DOC'（説明文）ファイル:      Documentation Basics.   33.
* documentation:                Accessing Documentation.  20.
* documentation-property:       Accessing Documentation.  7.
* DOSのファイル型:              MS-DOS File Types.      4.
* downcase:                     Case Conversion.        18.
* downcase-region:              Case Changes.           35.
* downcase-word:                Case Changes.           62.
* down-list:                    List Motion.            29.
* `drag-n-drop'イベント:        Misc Events.            46.
* イベント`drag-n-drop':        Misc Events.            46.
* dump-emacs:                   Building Emacs.         82.
* `\e':                         Character Type.         38.
* easy-mmode-define-minor-mode: Easy-Mmode.             10.
* edebug:                       Edebug.                 5.
* edebug:                       Source Breakpoints.     5.
* edebugモード:                 Edebug.                 4.
* 出力（edebug）:               Printing in Edebug.     5.
* [...]（edebug）:              Specification List.     124.
* edebugの実行モード:           Edebug Execution Modes.  5.
* edebug用仕様リスト:           Specification List.     5.
* 構文エラー（edebug）:         Backtracking.           5.
* 無名ラムダ式（edebug）:       Instrumenting.          35.
* ラムダリスト（edebug）:       Specification List.     160.
* ウィンドウ構成（edebug）:     Edebug Display Update.  24.
* 対話的コマンド（edebug）:     Instrumenting.          35.
* ドット対リスト（edebug）:     Specification List.     143.
* キーボードマクロ（edebug）:   Edebug Execution Modes.  66.
* カレントバッファのポイントとマーク（edebug）: Edebug Display Update.  20.
* レキシカル（テキスト上の）束縛（edebug）: Edebug Eval.  21.
* スペシャルフォーム（edebug）: Instrumenting.          35.
* edebug-display-freq-count:    Coverage Testing.       24.
* edebug-eval-top-level-form:   Instrumenting.          24.
* edebug-print-trace-after:     Trace Buffer.           21.
* edebug-print-trace-before:    Trace Buffer.           21.
* edebug-set-global-break-condition: Global Break Condition.  12.
* edebug-trace:                 Trace Buffer.           31.
* edebug-tracing:               Trace Buffer.           26.
* edebug-unwrap:                Specification List.     36.
* edit-abbrevs-map:             Standard Keymaps.       47.
* edit-and-eval-command:        Object from Minibuffer.  47.
* edit-tab-stops-map:           Standard Keymaps.       51.
* electric-buffer-menu-mode-map: Standard Keymaps.      55.
* electric-history-map:         Standard Keymaps.       60.
* `elp.el':                     Compilation Tips.       8.
* elt:                          Sequence Functions.     33.
* `.emacs':                     Init File.              4.
* Emacsの終了:                  Getting Out.            4.
* Emacsの終了:                  Killing Emacs.          4.
* Emacsの始動:                  Start-up Summary.       4.
* Emacsの休止:                  Suspending Emacs.       4.
* Emacsの構築方法:              Building Emacs.         4.
* `.emacs'のカスタマイズ:       Major Mode Conventions.  158.
* Emacsのイベント標準表記:      Describing Characters.  12.
* `emacs/etc/DOC-VERSION':      Documentation Basics.   33.
* emacs-lisp-mode-map:          Standard Keymaps.       65.
* `EMACSLOADPATH'環境変数:      Library Search.         10.
* 環境変数`EMACSLOADPATH':      Library Search.         10.
* emacs-pid:                    System Environment.     161.
* emacs-version:                Version Info.           9.
* enable-command:               Disabling Commands.     31.
* enable-flow-control:          Flow Control.           41.
* enable-flow-control-on:       Flow Control.           49.
* encode-coding-region:         Explicit Encoding.      39.
* encode-coding-string:         Explicit Encoding.      45.
* encode-time:                  Time Conversion.        135.
* end-of-buffer:                Buffer End Motion.      30.
* end-of-defun:                 List Motion.            57.
* end-of-file（ファイルの終り）: Input Functions.       10.
* end-of-line:                  Text Lines.             41.
* enlarge-window:               Resizing Windows.       12.
* enlarge-window-horizontally:  Resizing Windows.       33.
* eobp:                         Near Point.             59.
* eolp:                         Near Point.             68.
* eq:                           Equality Predicates.    11.
* equal:                        Equality Predicates.    55.
* erase-buffer:                 Deletion.               14.
* error:                        Signaling Errors.       15.
* `error', デバッグ:            Invoking the Debugger.  59.
* デバッグの`error':            Invoking the Debugger.  59.
* error-conditions:             Error Symbols.          4.
* error-message-string:         Handling Errors.        112.
* ESC:                          Functions for Key Lookup.  91.
* エスケープ（escape）:         Syntax Class Table.     68.
* esc-map:                      Prefix Keys.            15.
* ESC-prefix:                   Prefix Keys.            15.
* `etc/DOC-VERSION':            Documentation Basics.   33.
* eval:                         Eval.                   22.
* `eval'とデバッグ:             Internals of Debugger.  59.
* eval-after-load:              Hooks for Loading.      10.
* eval-and-compile:             Eval During Compile.    9.
* eval-current-buffer:          Eval.                   63.
* eval-current-buffer （edebug）: Instrumenting.        17.
* eval-defun （edebug）:        Instrumenting.          9.
* eval-expression （edebug）:   Instrumenting.          47.
* eval-minibuffer:              Object from Minibuffer.  35.
* eval-region:                  Eval.                   45.
* eval-region （edebug）:       Instrumenting.          17.
* eval-when-compile:            Eval During Compile.    16.
* evaporate （オーバレイ属性）: Overlay Properties.     123.
* event-basic-type:             Classifying Events.     61.
* event-click-count:            Repeat Events.          63.
* event-convert-list:           Classifying Events.     85.
* event-end:                    Accessing Events.       22.
* event-modifiers:              Classifying Events.     28.
* eventp:                       Input Events.           12.
* event-start:                  Accessing Events.       15.
* execute-extended-command:     Interactive Call.       63.
* execute-kbd-macro:            Keyboard Macros.        12.
* exit:                         Recursive Editing.      29.
* exit-minibuffer:              Minibuffer Misc.        9.
* exit-recursive-edit:          Recursive Editing.      78.
* exp:                          Math Functions.         27.
* expand-abbrev:                Abbrev Expansion.       23.
* expand-file-name:             File Name Expansion.    13.
* 式前置子（expression:         Syntax Class Table.     93.
* expt:                         Math Functions.         40.
* `\f':                         Character Type.         38.
* face （テキスト属性）:        Special Properties.     18.
* face （オーバレイ属性）:      Overlay Properties.     40.
* face-background:              Face Functions.         78.
* face-bold-p:                  Face Functions.         88.
* face-differs-from-default-p:  Face Functions.         107.
* face-documentation:           Face Functions.         100.
* face-equal:                   Face Functions.         103.
* face-font:                    Face Functions.         85.
* face-foreground:              Face Functions.         77.
* face-id:                      Face Functions.         97.
* face-italic-p:                Face Functions.         91.
* face-list:                    Face Functions.         16.
* facemenu-background-menu:     Standard Keymaps.       73.
* facemenu-face-menu:           Standard Keymaps.       78.
* facemenu-foreground-menu:     Standard Keymaps.       82.
* facemenu-indentation-menu:    Standard Keymaps.       86.
* facemenu-justification-menu:  Standard Keymaps.       90.
* facemenu-keymap:              Prefix Keys.            57.
* facemenu-menu:                Standard Keymaps.       69.
* facemenu-special-menu:        Standard Keymaps.       95.
* facep:                        Faces.                  15.
* face-stipple:                 Face Functions.         81.
* face-underline-p:             Face Functions.         94.
* false（偽）:                  nil and t.              4.
* 偽（false）:                  nil and t.              4.
* fancy-diary-display:          Fancy Diary Display.    10.
* fboundp:                      Function Cells.         44.
* fceiling:                     Rounding Operations.    17.
* featurep:                     Named Features.         102.
* FEATURE-unload-hook:          Unloading.              25.
* fetch-bytecode:               Dynamic Loading.        47.
* ffloor:                       Rounding Operations.    13.
* file-accessible-directory-p:  Testing Accessibility.  53.
* file-already-exists:          Changing Files.         96.
* file-attributes:              File Attributes.        52.
* file-directory-p:             Kinds of Files.         29.
* file-error:                   How Programs Do Loading.  62.
* file-executable-p:            Testing Accessibility.  30.
* file-exists-p:                Testing Accessibility.  9.
* file-local-copy:              Magic File Names.       117.
* file-locked:                  File Locks.             55.
* file-locked-p:                File Locks.             20.
* file-modes:                   File Attributes.        12.
* file-name-absolute-p:         Relative File Names.    15.
* file-name-all-completions:    File Name Completion.   10.
* file-name-all-versions:       Contents of Directories.  38.
* file-name-as-directory:       Directory Names.        23.
* file-name-completion:         File Name Completion.   31.
* file-name-directory:          File Name Components.   24.
* file-name-nondirectory:       File Name Components.   36.
* file-name-sans-extension:     File Name Components.   61.
* file-name-sans-versions:      File Name Components.   47.
* file-newer-than-file-p:       Testing Accessibility.  75.
* file-newest-backup:           Backup Names.           82.
* file-nlinks:                  File Attributes.        37.
* file-ownership-preserved-p:   Testing Accessibility.  71.
* file-readable-p:              Testing Accessibility.  19.
* file-regular-p:               Kinds of Files.         45.
* file-relative-name:           File Name Expansion.    37.
* file-supersession:            Modification Time.      55.
* file-symlink-p:               Kinds of Files.         10.
* file-truename:                Truenames.              14.
* file-writable-p:              Testing Accessibility.  37.
* fillarray:                    Array Functions.        56.
* fill-context-prefix:          Adaptive Fill.          14.
* fill-individual-paragraphs:   Filling.                50.
* fill-paragraph:               Filling.                32.
* fill-region:                  Filling.                38.
* fill-region-as-paragraph:     Filling.                70.
* find-backup-file-name:        Backup Names.           64.
* find-charset-region:          Scanning Charsets.      11.
* find-charset-string:          Scanning Charsets.      20.
* find-coding-systems-for-charsets: Lisp and Coding Systems.  51.
* find-coding-systems-region:   Lisp and Coding Systems.  35.
* find-coding-systems-string:   Lisp and Coding Systems.  44.
* find-file:                    Visiting Functions.     18.
* find-file-name-handler:       Magic File Names.       110.
* find-file-noselect:           Visiting Functions.     32.
* find-file-other-window:       Visiting Functions.     70.
* find-file-read-only:          Visiting Functions.     77.
* find-operation-coding-system: Default Coding Systems.  72.
* fixup-whitespace:             User-Level Deletion.    62.
* float:                        Numeric Conversions.    9.
* floatp:                       Predicates on Numbers.  13.
* floor:                        Numeric Conversions.    19.
* fmakunbound:                  Function Cells.         49.
* following-char:               Near Point.             28.
* フォントロック（font-lock）モード: Font Lock Mode.    4.
* font-lock-builtin-face:       Faces for Font Lock.    28.
* font-lock-comment-face:       Faces for Font Lock.    15.
* font-lock-constant-face:      Faces for Font Lock.    47.
* font-lock-function-name-face: Faces for Font Lock.    32.
* font-lock-keyword-face:       Faces for Font Lock.    23.
* font-lock-string-face:        Faces for Font Lock.    19.
* font-lock-type-face:          Faces for Font Lock.    42.
* font-lock-variable-name-face: Faces for Font Lock.    37.
* font-lock-warning-face:       Faces for Font Lock.    51.
* foo:                          A Sample Function Description.  22.
* for:                          Argument Evaluation.    10.
* force-mode-line-update:       Mode Line Format.       28.
* format:                       Formatting Strings.     17.
* format-find-file:             Format Conversion.      101.
* format-insert-file:           Format Conversion.      110.
* format-time-string:           Time Conversion.        22.
* format-write-file:            Format Conversion.      96.
* 未定義のアドバイス（forward advice）: Defining Advice.  68.
* forward-char:                 Character Motion.       26.
* forward-comment:              Parsing Expressions.    113.
* forward-line:                 Text Lines.             48.
* forward-list:                 List Motion.            15.
* forward-sexp:                 List Motion.            33.
* forward-to-indentation:       Motion by Indent.       18.
* forward-word:                 Word Motion.            10.
* frame-char-height:            Size and Position.      41.
* frame-char-width:             Size and Position.      42.
* frame-height:                 Size and Position.      25.
* frame-list:                   Finding All Frames.     7.
* frame-live-p:                 Deleting Frames.        18.
* framep:                       Frames.                 22.
* frame-parameters:             Parameter Access.       10.
* frame-pixel-height:           Size and Position.      36.
* frame-pixel-width:            Size and Position.      37.
* frame-selected-window:        Frames and Windows.     27.
* frame-top-window:             Frames and Windows.     18.
* frame-update-face-colors:     Face Functions.         122.
* frame-visible-p:              Visibility of Frames.   28.
* frame-width:                  Size and Position.      26.
* fround:                       Rounding Operations.    25.
* fset:                         Function Cells.         63.
* ftp-login:                    Cleanups.               49.
* ftruncate:                    Rounding Operations.    21.
* funcall:                      Calling Functions.      22.
* `funcall'とデバッグ:          Internals of Debugger.  59.
* function:                     Anonymous Functions.    81.
* functionp:                    What Is a Function.     73.
* 基本（fundamental）モード:    Major Modes.            4.
* fundamental-mode:             Auto Major Mode.        11.
* fundamental-mode-map:         Standard Keymaps.       106.
* garbage-collect:              Garbage Collection.     53.
* general-holidays:             Holiday Customizing.    13.
* generate-new-buffer:          Creating Buffers.       32.
* generate-new-buffer-name:     Buffer Names.           65.
* 汎用文字列区切り（generic:    Syntax Class Table.     124.
* 汎用コメント区切り（generic:  Syntax Class Table.     112.
* get:                          Symbol Plists.          23.
* get-buffer:                   Buffer Names.           50.
* get-buffer-create:            Creating Buffers.       17.
* get-buffer-process:           Process Buffers.        50.
* get-buffer-window:            Buffers and Windows.    30.
* get-buffer-window-list:       Buffers and Windows.    48.
* get-char-property:            Examining Properties.   23.
* getenv:                       System Environment.     94.
* get-file-buffer:              Buffer File Name.       52.
* get-file-char:                Input Streams.          127.
* get-largest-window:           Selecting Windows.      62.
* get-lru-window:               Selecting Windows.      41.
* get-process:                  Process Information.    21.
* get-register:                 Registers.              53.
* get-text-property:            Examining Properties.   15.
* get-unused-category:          Categories.             44.
* global-key-binding:           Functions for Key Lookup.  67.
* global-set-key:               Key Binding Commands.   30.
* global-unset-key:             Key Binding Commands.   38.
* goto-char:                    Character Motion.       10.
* goto-line:                    Text Lines.             14.
* hack-local-variables:         Auto Major Mode.        153.
* handle-switch-frame:          Input Focus.            43.
* hebrew-holidays:              Holiday Customizing.    5.
* help-command:                 Help Functions.         34.
* Helper-describe-bindings:     Help Functions.         104.
* Helper-help:                  Help Functions.         110.
* Helper-help-map:              Standard Keymaps.       111.
* highlight （フェイス名）:     Standard Faces.         26.
* holidays-in-diary-buffer:     Diary Customizing.      5.
* 環境変数`HOME':               Subprocess Creation.    14.
* `HOME', 環境変数:             Subprocess Creation.    14.
* iメニュー:                    Imenu.                  5.
* iconify-frame:                Visibility of Frames.   24.
* `iconify-frame'イベント:      Misc Events.            14.
* イベント`iconify-frame':      Misc Events.            14.
* identity:                     Calling Functions.      86.
* IEEE浮動小数点数:             Float Basics.           15.
* if:                           Conditionals.           11.
* ignore:                       Calling Functions.      89.
* inc:                          Simple Macro.           9.
* include-other-diary-files:    Fancy Diary Display.    46.
* indent-according-to-mode:     Mode-Specific Indent.   22.
* indent-code-rigidly:          Region Indent.          56.
* indent-for-tab-command:       Mode-Specific Indent.   26.
* indent-region:                Region Indent.          10.
* indent-relative:              Relative Indent.        10.
* indent-relative-maybe:        Relative Indent.        48.
* indent-rigidly:               Region Indent.          42.
* indent-to:                    Primitive Indent.       16.
* indent-to-left-margin:        Margins.                67.
* indirect-function:            Function Indirection.   60.
* Info-edit-map:                Standard Keymaps.       116.
* Info-mode-map:                Standard Keymaps.       120.
* 継承（inherit）:              Syntax Class Table.     108.
* initial-calendar-window-hook: Calendar Customizing.   39.
* input-pending-p:              Event Input Misc.       46.
* insert:                       Insertion.              34.
* insert-abbrev-table-description: Abbrev Tables.       28.
* insert-and-inherit:           Sticky Properties.      49.
* insert-before-markers:        Insertion.              40.
* insert-before-markers-and-inherit: Sticky Properties.  53.
* insert-behind-hooks （オーバレイ属性）: Overlay Properties.  80.
* insert-behind-hooks （テキスト属性）: Special Properties.  95.
* insert-buffer:                Commands for Insertion.  10.
* insert-buffer-substring:      Insertion.              63.
* insert-char:                  Insertion.              51.
* insert-directory:             Contents of Directories.  42.
* insert-file-contents:         Reading from Files.     11.
* insert-file-contents-literally: Reading from Files.   45.
* insert-hebrew-diary-entry:    Hebrew/Islamic Entries.  59.
* insert-in-front-hooks （オーバレイ属性）: Overlay Properties.  74.
* insert-in-front-hooks （テキスト属性）: Special Properties.  95.
* insert-islamic-diary-entry:   Hebrew/Islamic Entries.  59.
* insert-monthly-hebrew-diary-entry: Hebrew/Islamic Entries.  59.
* insert-monthly-islamic-diary-entry: Hebrew/Islamic Entries.  59.
* insert-register:              Registers.              66.
* insert-yearly-hebrew-diary-entry: Hebrew/Islamic Entries.  59.
* insert-yearly-islamic-diary-entry: Hebrew/Islamic Entries.  59.
* intangible （テキスト属性）:  Special Properties.     73.
* intangible （オーバレイ属性）: Overlay Properties.    92.
* integer-or-marker-p:          Predicates on Markers.  16.
* integerp:                     Predicates on Numbers.  19.
* interactive:                  Using Interactive.      10.
* `interactive'の使用例:        Interactive Examples.   4.
* interactive-p:                Interactive Call.       87.
* intern:                       Creating Symbols.       86.
* intern-soft:                  Creating Symbols.       107.
* interrupt-process:            Signals to Processes.   47.
* int-to-string:                String Conversion.      51.
* invalid-function:             Function Indirection.   19.
* invalid-read-syntax:          Printed Representation.  26.
* invalid-regexp:               Syntax of Regexps.      259.
* invert-face:                  Face Functions.         69.
* invisible （テキスト属性）:   Special Properties.     68.
* invisible （オーバレイ属性）: Overlay Properties.     86.
* isearch-mode-map:             Standard Keymaps.       124.
* islamic-holidays:             Holiday Customizing.    5.
* italic （フェイス名）:        Standard Faces.         41.
* justify-current-line:         Filling.                85.
* just-one-space:               User-Level Deletion.    90.
* key-binding:                  Functions for Key Lookup.  48.
* keyboard-coding-system:       Terminal I/O Encoding.  12.
* keyboard-quit:                Quitting.               79.
* keyboard-translate:           Translating Input.      66.
* key-description:              Describing Characters.  12.
* keymapp:                      Format of Keymaps.      76.
* keymap-parent:                Inheritance and Keymaps.  28.
* kill-all-local-variables:     Creating Buffer-Local.  116.
* kill-append:                  Low-Level Kill Ring.    30.
* kill-buffer:                  Killing Buffers.        33.
* kill-emacs:                   Killing Emacs.          11.
* kill-local-variable:          Creating Buffer-Local.  98.
* kill-new:                     Low-Level Kill Ring.    25.
* kill-process:                 Signals to Processes.   54.
* kill-region:                  Kill Functions.         15.
* `lambda', デバッグ:           Invoking the Debugger.  29.
* デバッグの`lambda':           Invoking the Debugger.  29.
* `lambda', キーマップ:         Key Lookup.             65.
* キーマップ内の`lambda':       Key Lookup.             65.
* length:                       Sequence Functions.     15.
* let:                          Local Variables.        49.
* let*:                         Local Variables.        71.
* line-move-ignore-invisible:   Invisible Text.         76.
* Lispの歴史:                   Lisp History.           4.
* Lispリーダ:                   Streams Intro.          4.
* Lispデバッガ:                 Debugger.               4.
* Lispプリンタ:                 Output Functions.       37.
* Lispライブラリ:               Loading.                4.
* Lispオブジェクト:             Lisp Data Types.        4.
* Lisp式単位の移動:             List Motion.            4.
* Lispの入れ子のエラー:         Eval.                   71.
* Lispの大文字小文字変換:       Case Conversion.        4.
* lisp-interaction-mode-map:    Standard Keymaps.       133.
* `lisp-mode.el':               Example Major Modes.    53.
* lisp-mode-map:                Standard Keymaps.       137.
* list:                         Building Lists.         32.
* list-diary-entries-hook:      Fancy Diary Display.    46.
* list-hebrew-diary-entries:    Hebrew/Islamic Entries.  11.
* listify-key-sequence:         Event Input Misc.       34.
* list-islamic-diary-entries:   Hebrew/Islamic Entries.  16.
* listp:                        List-related Predicates.  24.
* list-processes:               Process Information.    10.
* ln:                           Changing Files.         96.
* load:                         How Programs Do Loading.  15.
* load-average:                 System Environment.     144.
* load-file:                    How Programs Do Loading.  72.
* load-library:                 How Programs Do Loading.  78.
* `loadup.el':                  Building Emacs.         15.
* local-holidays:               Holiday Customizing.    16.
* local-key-binding:            Functions for Key Lookup.  60.
* local-map （テキスト属性）:   Special Properties.     39.
* local-map （オーバレイ属性）: Overlay Properties.     128.
* local-set-key:                Key Binding Commands.   57.
* local-unset-key:              Key Binding Commands.   65.
* local-variable-p:             Creating Buffer-Local.  67.
* locate-library:               Library Search.         89.
* lock-buffer:                  File Locks.             28.
* log:                          Math Functions.         31.
* log10:                        Math Functions.         36.
* logand:                       Bitwise Operations.     124.
* logb:                         Float Basics.           39.
* logior:                       Bitwise Operations.     157.
* lognot:                       Bitwise Operations.     191.
* logxor:                       Bitwise Operations.     174.
* looking-at:                   Regexp Search.          97.
* lookup-key:                   Functions for Key Lookup.  9.
* `lookup-key'における小文字への変換: Key Sequence Input.  44.
* lower-frame:                  Raising and Lowering.   28.
* lsh:                          Bitwise Operations.     14.
* Maclisp:                      Lisp History.           9.
* macroexpand:                  Expansion.              31.
* make-abbrev-table:            Abbrev Tables.          9.
* make-auto-save-file-name:     Auto-Saving.            55.
* make-backup-file-name:        Backup Names.           35.
* make-bool-vector:             Bool-Vectors.           16.
* make-byte-code:               Byte-Code Objects.      53.
* make-category-set:            Categories.             68.
* make-char:                    Splitting Characters.   42.
* make-char-table:              Char-Tables.            30.
* make-directory:               Create/Delete Dirs.     12.
* make-display-table:           Display Table Format.   10.
* make-face:                    Face Functions.         12.
* make-frame:                   Creating Frames.        9.
* make-frame-invisible:         Visibility of Frames.   20.
* make-frame-on-display:        Multiple Displays.      30.
* make-frame-visible:           Visibility of Frames.   16.
* `make-frame-visible'イベント: Misc Events.            23.
* イベント`make-frame-visible': Misc Events.            23.
* make-help-screen:             Help Functions.         124.
* make-indirect-buffer:         Indirect Buffers.       30.
* make-keymap:                  Creating Keymaps.       9.
* make-list:                    Building Lists.         43.
* make-local-hook:              Hooks.                  119.
* make-local-variable:          Creating Buffer-Local.  7.
* make-marker:                  Creating Markers.       11.
* make-overlay:                 Managing Overlays.      10.
* make-sparse-keymap:           Creating Keymaps.       22.
* make-string:                  Creating Strings.       10.
* make-symbol:                  Creating Symbols.       74.
* make-symbolic-link:           Changing Files.         96.
* make-syntax-table:            Syntax Table Functions.  9.
* make-temp-name:               Unique File Names.      21.
* make-translation-table:       Translation of Characters.  12.
* make-variable-buffer-local:   Creating Buffer-Local.  45.
* make-variable-frame-local:    Frame-Local Variables.  17.
* make-vector:                  Vector Functions.       25.
* makunbound:                   Void Variables.         19.
* mapatoms:                     Creating Symbols.       130.
* mapcar:                       Mapping Functions.      18.
* map-char-table:               Char-Tables.            111.
* mapconcat:                    Mapping Functions.      52.
* map-y-or-n-p:                 Multiple Queries.       11.
* mark:                         The Mark.               45.
* mark-diary-entries-hook:      Fancy Diary Display.    46.
* mark-diary-entries-in-calendar: Calendar Customizing.  19.
* marker-buffer:                Information from Markers.  13.
* marker-insertion-type:        Marker Insertion Types.  19.
* markerp:                      Predicates on Markers.  11.
* marker-position:              Information from Markers.  9.
* mark-hebrew-diary-entries:    Hebrew/Islamic Entries.  11.
* mark-holidays-in-calendar:    Calendar Customizing.   25.
* mark-included-diary-files:    Fancy Diary Display.    46.
* mark-islamic-diary-entries:   Hebrew/Islamic Entries.  16.
* mark-marker:                  The Mark.               52.
* match-beginning:              Simple Match Data.      41.
* match-data:                   Entire Match Data.      10.
* match-end:                    Simple Match Data.      52.
* match-string:                 Simple Match Data.      24.
* match-string-no-properties:   Simple Match Data.      37.
* max:                          Comparison of Numbers.  66.
* member:                       Sets And Lists.         71.
* memory-limit:                 Garbage Collection.     147.
* memq:                         Sets And Lists.         17.
* menu-bar-edit-menu:           Standard Keymaps.       141.
* menu-bar-files-menu:          Standard Keymaps.       145.
* menu-bar-help-menu:           Standard Keymaps.       149.
* menu-bar-mule-menu:           Standard Keymaps.       153.
* menu-bar-search-menu:         Standard Keymaps.       157.
* menu-bar-tools-menu:          Standard Keymaps.       161.
* menu-item:                    Extended Menu Items.    4.
* message:                      The Echo Area.          18.
* message-box:                  The Echo Area.          53.
* message-or-box:               The Echo Area.          40.
* `M-g':                        Prefix Keys.            57.
* min:                          Comparison of Numbers.  76.
* minibuffer-complete:          Completion Commands.    66.
* minibuffer-complete-and-exit: Completion Commands.    69.
* minibuffer-complete-word:     Completion Commands.    61.
* minibuffer-completion-help:   Completion Commands.    81.
* minibuffer-depth:             Minibuffer Misc.        84.
* minibuffer-prompt:            Minibuffer Misc.        34.
* minibuffer-prompt-width:      Minibuffer Misc.        38.
* minibuffer-window:            Minibuffer Misc.        57.
* minibuffer-window-active-p:   Minibuffer Misc.        72.
* minor-mode-key-binding:       Functions for Key Lookup.  74.
* mod:                          Arithmetic Operations.  134.
* `mode-class'属性:             Major Mode Conventions.  141.
* 属性`mode-class':             Major Mode Conventions.  141.
* modeline （フェイス名）:      Standard Faces.         13.
* `mode-line-format', シェルモード: Mode Line Data.     71.
* シェルモードの`mode-line-format': Mode Line Data.     71.
* mode-specific-map:            Prefix Keys.            24.
* modification-hooks （オーバレイ属性）: Overlay Properties.  56.
* modification-hooks （テキスト属性）: Special Properties.  84.
* modify-category-entry:        Categories.             94.
* modify-frame-parameters:      Parameter Access.       14.
* modify-syntax-entry:          Syntax Table Functions.  21.
* momentary-string-display:     Temporary Displays.     59.
* mouse-face （テキスト属性）:  Special Properties.     32.
* mouse-face （オーバレイ属性）: Overlay Properties.    51.
* mouse-movement-p:             Classifying Events.     82.
* mouse-pixel-position:         Mouse Position.         21.
* mouse-position:               Mouse Position.         10.
* `mouse-wheel'イベント:        Misc Events.            30.
* イベント`mouse-wheel':        Misc Events.            30.
* movemail:                     Subprocess Creation.    48.
* move-marker:                  Moving Markers.         32.
* move-overlay:                 Managing Overlays.      36.
* move-to-column:               Columns.                27.
* move-to-left-margin:          Margins.                54.
* move-to-window-line:          Screen Lines.           40.
* MS-DOSのファイル型:           MS-DOS File Types.      4.
* MS-DOSとファイルモード:       Changing Files.         124.
* ファイルモードとMS-DOS:       Changing Files.         124.
* mule-keymap:                  Prefix Keys.            37.
* multibyte-string-p:           Text Representations.   48.
* `M-x':                        Interactive Call.       73.
* `\n':                         Character Type.         38.
* `\n', 表示:                   Output Variables.       11.
* `\N', 置換:                   Replacing Match.        42.
* 置換の`\N':                   Replacing Match.        42.
* NaN（非数値）:                Float Basics.           15.
* narrow-to-page:               Narrowing.              31.
* narrow-to-region:             Narrowing.              24.
* natnump:                      Predicates on Numbers.  31.
* nconc:                        Rearrangement.          15.
* negative-argument:            Prefix Command Arguments.  106.
* newline:                      Commands for Insertion.  35.
* newline-and-indent:           Mode-Specific Indent.   32.
* next-char-property-change:    Property Search.        73.
* next-frame:                   Finding All Frames.     19.
* next-history-element:         Minibuffer Misc.        22.
* next-matching-history-element: Minibuffer Misc.       30.
* next-overlay-change:          Managing Overlays.      61.
* next-property-change:         Property Search.        24.
* next-single-property-change:  Property Search.        48.
* next-window:                  Cyclic Window Ordering.  21.
* nil:                          Constant Variables.     4.
* `nil', リスト:                Cons Cell Type.         73.
* `nil'とリスト:                Cons Cells.             4.
* `nil'の使い方:                nil and t.              4.
* リスト内の`nil':              Cons Cell Type.         73.
* `nil', キーマップ:            Key Lookup.             35.
* `nil'入力ストリーム:          Input Streams.          46.
* キーマップ内の`nil':          Key Lookup.             35.
* `nil'出力ストリーム:          Output Streams.         33.
* nlistp:                       List-related Predicates.  33.
* no-catch:                     Catch and Throw.        77.
* nongregorian-diary-listing-hook: Hebrew/Islamic Entries.  11.
* nongregorian-diary-marking-hook: Hebrew/Islamic Entries.  11.
* 再開（`no-redraw-on-reenter'を参照 ）: Refresh Screen.  27.
* 停止（`no-redraw-on-reenter'を参照 ）: Refresh Screen.  27.
* normal-mode:                  Auto Major Mode.        20.
* not:                          Combining Conditions.   11.
* &not （edebug）:              Specification List.     84.
* not-modified:                 Buffer Modification.    37.
* nreverse:                     Rearrangement.          62.
* nth:                          List Elements.          59.
* nthcdr:                       List Elements.          78.
* null:                         List-related Predicates.  39.
* number-of-diary-entries:      Diary Customizing.      11.
* number-or-marker-p:           Predicates on Markers.  20.
* numberp:                      Predicates on Numbers.  23.
* number-to-string:             String Conversion.      41.
* obarray（オブジェクト配列）:  Creating Symbols.       10.
* オブジェクト配列（obarray）:  Creating Symbols.       10.
* occur-mode-map:               Standard Keymaps.       172.
* one-window-p:                 Splitting Windows.      121.
* 開き括弧文字（open:           Syntax Class Table.     36.
* open-dribble-file:            Recording Input.        16.
* open-network-stream:          Network.                22.
* open-termscript:              Terminal Output.        44.
* &optional:                    Argument List.          15.
* optional引数:                 Argument List.          15.
* &optional （edebug）:         Specification List.     56.
* or:                           Combining Conditions.   53.
* &or （edebug）:               Specification List.     76.
* other-buffer:                 The Buffer List.        58.
* other-holidays:               Holiday Customizing.    28.
* other-window:                 Cyclic Window Ordering.  77.
* アウトライン（outline）モード: Substitution.          13.
* overlay-buffer:               Managing Overlays.      25.
* overlay-end:                  Managing Overlays.      22.
* overlay-get:                  Overlay Properties.     121.
* overlay-put:                  Overlay Properties.     127.
* overlays-at:                  Managing Overlays.      48.
* overlays-in:                  Managing Overlays.      54.
* overlay-start:                Managing Overlays.      19.
* 対になった区切り（paired:     Syntax Class Table.     87.
* parse-partial-sexp:           Parsing Expressions.    13.
* 環境変数`PATH':               Subprocess Creation.    14.
* `PATH', 環境変数:             Subprocess Creation.    14.
* peculiarエラー:               Error Symbols.          29.
* エラーpeculiar:               Error Symbols.          29.
* perform-replace:              Search and Replace.     7.
* plist（属性リスト）:          Property Lists.         4.
* 属性リスト（plist）:          Property Lists.         4.
* plist-get:                    Other Plists.           10.
* plist-put:                    Other Plists.           17.
* point:                        Point.                  29.
* point-entered （テキスト属性）: Special Properties.   108.
* point-left （テキスト属性）:  Special Properties.     108.
* point-marker:                 Creating Markers.       17.
* point-max:                    Point.                  40.
* point-max-marker:             Creating Markers.       27.
* point-min:                    Point.                  35.
* point-min-marker:             Creating Markers.       22.
* pop-mark:                     The Mark.               102.
* pop-to-buffer:                Displaying Buffers.     56.
* posix-looking-at:             POSIX Regexps.          26.
* posix-search-backward:        POSIX Regexps.          22.
* posix-search-forward:         POSIX Regexps.          18.
* posix-string-match:           POSIX Regexps.          30.
* posn-col-row:                 Accessing Events.       42.
* posn-point:                   Accessing Events.       36.
* posn-timestamp:               Accessing Events.       47.
* posn-window:                  Accessing Events.       33.
* posn-x-y:                     Accessing Events.       39.
* pos-visible-in-window-p:      Window Start.           101.
* preceding-char:               Near Point.             49.
* prefix-numeric-value:         Prefix Command Arguments.  72.
* previous-char-property-change: Property Search.       79.
* previous-frame:               Finding All Frames.     39.
* previous-history-element:     Minibuffer Misc.        18.
* previous-matching-history-element: Minibuffer Misc.   26.
* previous-overlay-change:      Managing Overlays.      65.
* previous-property-change:     Property Search.        61.
* previous-single-property-change: Property Search.     67.
* previous-window:              Cyclic Window Ordering.  72.
* primitive-undo:               Undo.                   81.
* prin1:                        Output Functions.       54.
* prin1-to-string:              Output Functions.       87.
* princ:                        Output Functions.       65.
* print:                        Output Functions.       37.
* printの例:                    Output Streams.         44.
* print-diary-entries:          Diary Customizing.      20.
* print-diary-entries-hook:     Diary Customizing.      20.
* print-help-return-message:    Help Functions.         42.
* priority （オーバレイ属性）:  Overlay Properties.     18.
* process-buffer:               Process Buffers.        21.
* process-coding-system:        Process Information.    98.
* process-command:              Process Information.    29.
* process-contact:              Process Information.    47.
* process-exit-status:          Process Information.    88.
* process-filter:               Filter Functions.       85.
* process-id:                   Process Information.    37.
* process-kill-without-query:   Deleting Processes.     32.
* process-list:                 Process Information.    15.
* process-mark:                 Process Buffers.        27.
* process-name:                 Process Information.    44.
* processp:                     Processes.              24.
* process-send-eof:             Input to Processes.     53.
* process-send-region:          Input to Processes.     43.
* process-send-string:          Input to Processes.     24.
* process-sentinel:             Sentinels.              67.
* process-status:               Process Information.    51.
* process-tty-name:             Process Information.    93.
* `profile.el':                 Compilation Tips.       8.
* prog1:                        Sequencing.             46.
* prog2:                        Sequencing.             63.
* progn:                        Sequencing.             31.
* 暗黙の`progn':                Sequencing.             19.
* provide:                      Named Features.         67.
* 疑似端末PTY:                  Asynchronous Processes.  63.
* 句読点文字（punctuation:      Syntax Class Table.     29.
* purecopy:                     Pure Storage.           25.
* push-mark:                    The Mark.               92.
* put:                          Symbol Plists.          33.
* put-text-property:            Changing Properties.    17.
* quietly-read-abbrev-file:     Abbrev Files.           19.
* quit-process:                 Signals to Processes.   59.
* quote:                        Quoting.                12.
* `quoted-insert'の抑制:        Changing Key Bindings.  142.
* `\r':                         Character Type.         38.
* raise-frame:                  Raising and Lowering.   24.
* random:                       Random Numbers.         23.
* rassoc:                       Association Lists.      85.
* rassq:                        Association Lists.      118.
* read:                         Input Functions.        15.
* read-buffer:                  High-Level Completion.  15.
* read-char:                    Reading One Event.      41.
* read-coding-system:           User-Chosen Coding Systems.  27.
* read-command:                 High-Level Completion.  49.
* read-event:                   Reading One Event.      9.
* read-file-name:               Reading File Names.     11.
* read-from-minibuffer:         Text from Minibuffer.   17.
* read-from-string:             Input Functions.        19.
* read-input-method-name:       Input Methods.          33.
* read-kbd-macro:               Describing Characters.  46.
* read-key-sequence:            Key Sequence Input.     11.
* read-key-sequence-vector:     Key Sequence Input.     41.
* read-minibuffer:              Object from Minibuffer.  9.
* read-no-blanks-input:         Text from Minibuffer.   136.
* read-non-nil-coding-system:   User-Chosen Coding Systems.  33.
* read-only （テキスト属性）:   Special Properties.     52.
* read-passwd:                  Reading a Password.     10.
* read-quoted-char:             Quoted Character Input.  12.
* `read-quoted-char'の中断:     Quitting.               49.
* read-string:                  Text from Minibuffer.   79.
* read-variable:                High-Level Completion.  82.
* recent-auto-save-p:           Auto-Saving.            94.
* recenter:                     Vertical Scrolling.     108.
* recent-keys:                  Recording Input.        7.
* recursion-depth:              Recursive Editing.      92.
* recursive-edit:               Recursive Editing.      59.
* redirect-frame-focus:         Input Focus.            50.
* redraw-display:               Refresh Screen.         15.
* redraw-frame:                 Refresh Screen.         10.
* regexp（正規表現）:           Regular Expressions.    4.
* regexp-opt:                   Syntax of Regexps.      281.
* regexp-opt-depth:             Syntax of Regexps.      299.
* regexp-quote:                 Syntax of Regexps.      266.
* region （フェイス名）:        Standard Faces.         17.
* region-beginning:             The Region.             11.
* region-end:                   The Region.             17.
* reindent-then-newline-and-indent: Mode-Specific Indent.  41.
* remove-from-invisibility-spec: Invisible Text.        58.
* remove-hook:                  Hooks.                  112.
* remove-text-properties:       Changing Properties.    41.
* rename-auto-save-file:        Auto-Saving.            144.
* rename-buffer:                Buffer Names.           37.
* rename-file:                  Changing Files.         63.
* replace-buffer-in-windows:    Displaying Buffers.     95.
* replace-match:                Replacing Match.        9.
* require:                      Named Features.         88.
* `require'によるロードエラー:  Named Features.         22.
* バイトコンパイル時の`require': Named Features.        46.
* re-search-backward:           Regexp Search.          53.
* re-search-forward:            Regexp Search.          17.
* &rest:                        Argument List.          15.
* rest引数:                     Argument List.          15.
* &rest （edebug）:             Specification List.     66.
* reverse:                      Building Lists.         144.
* revert-buffer:                Reverting.              11.
* rm:                           Changing Files.         85.
* round:                        Numeric Conversions.    31.
* rplaca:                       Modifying Lists.        9.
* rplacd:                       Modifying Lists.        9.
* run-at-time:                  Timers.                 17.
* run-hooks:                    Hooks.                  54.
* run-hook-with-args:           Hooks.                  70.
* run-hook-with-args-until-failure: Hooks.              74.
* run-hook-with-args-until-success: Hooks.              80.
* run-with-idle-timer:          Timers.                 77.
* S式日誌項目:                  Sexp Diary Entries.     4.
* S式単位の移動:                List Motion.            4.
* `\s', 正規表現:               Syntax of Regexps.      222.
* `\S', 正規表現:               Syntax of Regexps.      230.
* 正規表現の`\s':               Syntax of Regexps.      222.
* 正規表現の`\S':               Syntax of Regexps.      230.
* safe-length:                  List Elements.          92.
* save-buffer:                  Saving Buffers.         13.
* save-current-buffer:          Current Buffer.         102.
* save-excursion:               Excursions.             16.
* save-match-data:              Saving Match Data.      21.
* save-restriction:             Narrowing.              47.
* save-selected-window:         Selecting Windows.      25.
* save-some-buffers:            Saving Buffers.         31.
* save-window-excursion:        Window Configurations.  47.
* scan-lists:                   Parsing Expressions.    72.
* scan-sexps:                   Parsing Expressions.    89.
* `*scratch*':                  Auto Major Mode.        94.
* screen-height:                Size and Position.      30.
* screen-width:                 Size and Position.      31.
* scroll-bar-event-ratio:       Accessing Events.       52.
* scroll-bar-scale:             Accessing Events.       57.
* scroll-down:                  Vertical Scrolling.     42.
* scroll-left:                  Horizontal Scrolling.   24.
* scroll-other-window:          Vertical Scrolling.     53.
* scroll-right:                 Horizontal Scrolling.   30.
* scroll-up:                    Vertical Scrolling.     31.
* search-backward:              String Search.          53.
* search-failed:                String Search.          40.
* search-forward:               String Search.          16.
* secondary-selection （フェイス名）: Standard Faces.   22.
* selected-frame:               Input Focus.            11.
* selected-window:              Selecting Windows.      10.
* select-frame:                 Input Focus.            32.
* select-safe-coding-system:    User-Chosen Coding Systems.  7.
* select-window:                Selecting Windows.      14.
* self-insert-and-exit:         Minibuffer Misc.        13.
* self-insert-command:          Commands for Insertion.  15.
* `self-insert-command', マイナモード: Keymaps and Minor Modes.  9.
* `self-insert-command'の無効化: Changing Key Bindings.  132.
* send-string-to-terminal:      Terminal Output.        32.
* sequencep:                    Sequence Functions.     11.
* set:                          Setting Variables.      39.
* set-auto-mode:                Auto Major Mode.        63.
* set-buffer:                   Current Buffer.         93.
* set-buffer-auto-saved:        Auto-Saving.            98.
* set-buffer-major-mode:        Auto Major Mode.        85.
* set-buffer-modified-p:        Buffer Modification.    27.
* set-buffer-multibyte:         Selecting a Representation.  10.
* setcar:                       Setcar.                 10.
* set-case-syntax:              Case Tables.            85.
* set-case-syntax-delims:       Case Tables.            82.
* set-case-syntax-pair:         Case Tables.            79.
* set-case-table:               Case Tables.            71.
* set-category-table:           Categories.             64.
* setcdr:                       Setcdr.                 9.
* set-char-table-default:       Char-Tables.            45.
* set-char-table-extra-slot:    Char-Tables.            62.
* set-char-table-parent:        Char-Tables.            55.
* set-char-table-range:         Char-Tables.            88.
* set-default:                  Default Value.          73.
* set-default-file-modes:       Changing Files.         110.
* set-display-table-slot:       Display Table Format.   59.
* setenv:                       System Environment.     108.
* set-face-background:          Face Functions.         36.
* set-face-bold-p:              Face Functions.         57.
* set-face-font:                Face Functions.         50.
* set-face-foreground:          Face Functions.         35.
* set-face-italic-p:            Face Functions.         61.
* set-face-stipple:             Face Functions.         42.
* set-face-underline-p:         Face Functions.         65.
* set-file-modes:               Changing Files.         106.
* set-frame-configuration:      Frame Configurations.   15.
* set-frame-height:             Size and Position.      53.
* set-frame-position:           Size and Position.      13.
* set-frame-size:               Size and Position.      46.
* set-frame-width:              Size and Position.      65.
* set-input-method:             Input Methods.          27.
* set-input-mode:               Input Modes.            7.
* set-keyboard-coding-system:   Terminal I/O Encoding.  16.
* set-keymap-parent:            Inheritance and Keymaps.  32.
* set-left-margin:              Margins.                34.
* set-mark:                     The Mark.               70.
* set-marker:                   Moving Markers.         12.
* set-marker-insertion-type:    Marker Insertion Types.  14.
* set-match-data:               Entire Match Data.      32.
* set-mouse-pixel-position:     Mouse Position.         25.
* set-mouse-position:           Mouse Position.         15.
* setplist:                     Symbol Plists.          10.
* set-process-buffer:           Process Buffers.        46.
* set-process-coding-system:    Process Information.    105.
* set-process-filter:           Filter Functions.       81.
* set-process-sentinel:         Sentinels.              52.
* setprv:                       System Environment.     168.
* setq:                         Setting Variables.      10.
* setq-default:                 Default Value.          34.
* set-register:                 Registers.              57.
* set-right-margin:             Margins.                39.
* set-screen-height:            Size and Position.      67.
* set-screen-width:             Size and Position.      67.
* set-standard-case-table:      Case Tables.            61.
* set-syntax-table:             Syntax Table Functions.  83.
* set-terminal-coding-system:   Terminal I/O Encoding.  25.
* set-text-properties:          Changing Properties.    61.
* setting-constant:             Constant Variables.     4.
* set-visited-file-modtime:     Modification Time.      37.
* set-visited-file-name:        Buffer File Name.       65.
* set-window-buffer:            Buffers and Windows.    14.
* set-window-configuration:     Window Configurations.  24.
* set-window-dedicated-p:       Choosing Window.        164.
* set-window-display-table:     Active Display Table.   18.
* set-window-hscroll:           Horizontal Scrolling.   56.
* set-window-point:             Window Point.           44.
* set-window-redisplay-end-trigger: Window Hooks.       56.
* set-window-start:             Window Start.           49.
* shell-command-to-string:      Synchronous Processes.  156.
* shell-quote-argument:         Shell Arguments.        14.
* shrink-window:                Resizing Windows.       39.
* shrink-window-horizontally:   Resizing Windows.       48.
* shrink-window-if-larger-than-buffer: Resizing Windows.  55.
* signal:                       Signaling Errors.       36.
* signal-process:               Signals to Processes.   77.
* simple-diary-display:         Fancy Diary Display.    4.
* sin:                          Math Functions.         9.
* single-key-description:       Describing Characters.  18.
* `site-init.el':               Building Emacs.         53.
* `site-load.el':               Building Emacs.         40.
* `site-start.el':              Start-up Summary.       36.
* sit-for:                      Waiting.                12.
* skip-chars-backward:          Skipping Characters.    46.
* skip-chars-forward:           Skipping Characters.    11.
* skip-syntax-backward:         Motion and Syntax.      16.
* skip-syntax-forward:          Motion and Syntax.      10.
* sleep-for:                    Waiting.                40.
* Snarf-documentation:          Accessing Documentation.  102.
* sort:                         Rearrangement.          96.
* sort-columns:                 Sorting.                182.
* sort-diary-entries:           Fancy Diary Display.    30.
* sort-fields:                  Sorting.                168.
* sort-lines:                   Sorting.                156.
* sort-numeric-fields:          Sorting.                175.
* sort-pages:                   Sorting.                164.
* sort-paragraphs:              Sorting.                160.
* sort-regexp-fields:           Sorting.                102.
* sort-subr:                    Sorting.                12.
* SPC, ミニバッファ:            Text from Minibuffer.   157.
* `special':                    Major Mode Conventions.  141.
* special-display-popup-frame:  Choosing Window.        119.
* split-char:                   Splitting Characters.   27.
* split-line:                   Commands for Insertion.  52.
* split-string:                 Creating Strings.       120.
* split-window:                 Splitting Windows.      15.
* split-window-horizontally:    Splitting Windows.      108.
* split-window-vertically:      Splitting Windows.      93.
* sqrt:                         Math Functions.         44.
* standard-case-table:          Case Tables.            65.
* standard-category-table:      Categories.             56.
* standard-syntax-table:        Standard Syntax Tables.  10.
* start-process:                Asynchronous Processes.  15.
* start-process-shell-command:  Asynchronous Processes.  50.
* `startup.el':                 Start-up Summary.       4.
* stop-process:                 Signals to Processes.   64.
* store-match-data:             Entire Match Data.      38.
* store-substring:              Modifying Strings.      15.
* string:                       Creating Strings.       23.
* string=:                      Text Comparison.        18.
* string<:                      Text Comparison.        40.
* 文字列クォート（string:       Syntax Class Table.     51.
* string-as-multibyte:          Selecting a Representation.  30.
* string-as-unibyte:            Selecting a Representation.  24.
* string-equal:                 Text Comparison.        37.
* string-lessp:                 Text Comparison.        76.
* string-make-multibyte:        Converting Representations.  63.
* string-make-unibyte:          Converting Representations.  58.
* string-match:                 Regexp Search.          70.
* stringp:                      Predicates for Strings.  10.
* string-to-char:               String Conversion.      24.
* string-to-int:                String Conversion.      76.
* string-to-number:             String Conversion.      56.
* string-width:                 Width.                  15.
* subr:                         What Is a Function.     21.
* subrp:                        What Is a Function.     77.
* subst-char-in-region:         Substitution.           10.
* substitute-command-keys:      Keys in Documentation.  34.
* substitute-in-file-name:      File Name Expansion.    64.
* substitute-key-definition:    Changing Key Bindings.  95.
* substring:                    Creating Strings.       29.
* suppress-keymap:              Changing Key Bindings.  132.
* suspend-emacs:                Suspending Emacs.       22.
* switch-to-buffer:             Displaying Buffers.     22.
* switch-to-buffer-other-window: Displaying Buffers.    42.
* シンボル構成文字（symbol:     Syntax Class Table.     21.
* symbol-function:              Function Cells.         14.
* symbol-name:                  Creating Symbols.       64.
* symbolp:                      Symbols.                15.
* symbol-plist:                 Symbol Plists.          7.
* symbol-value:                 Accessing Variables.    13.
* syntax-table:                 Syntax Table Functions.  87.
* syntax-table （テキスト属性）: Syntax Properties.     4.
* syntax-table-p:               Syntax Basics.          39.
* system-name:                  System Environment.     76.
* t:                            Constant Variables.     4.
* `\t':                         Character Type.         38.
* `t'と真:                      nil and t.              21.
* `t'入力ストリーム:            Input Streams.          40.
* `t'出力ストリーム:            Output Streams.         29.
* TAB, ミニバッファ:            Text from Minibuffer.   161.
* tab-to-tab-stop:              Indent Tabs.            15.
* tan:                          Math Functions.         11.
* TCP:                          Network.                4.
* temacs:                       Building Emacs.         4.
* 環境変数`TERM':               Terminal-Specific.      35.
* `TERM', 環境変数:             Terminal-Specific.      35.
* Termcap:                      Terminal-Specific.      17.
* terminal-coding-system:       Terminal I/O Encoding.  21.
* terpri:                       Output Functions.       79.
* text-char-description:        Describing Characters.  33.
* text-mode-map:                Standard Keymaps.       182.
* text-properties-at:           Examining Properties.   35.
* text-property-any:            Property Search.        83.
* text-property-not-all:        Property Search.        92.
* thing-at-point:               Buffer Contents.        54.
* this-command-keys:            Command Loop Info.      55.
* this-command-keys-vector:     Command Loop Info.      65.
* throw:                        Catch and Throw.        70.
* `throw'の例:                  Recursive Editing.      29.
* 環境変数`TMP':                Unique File Names.      34.
* `TMP', 環境変数:              Unique File Names.      34.
* 環境変数`TMPDIR':             Unique File Names.      34.
* `TMPDIR', 環境変数:           Unique File Names.      34.
* today-invisible-calendar-hook: Calendar Customizing.  62.
* today-visible-calendar-hook:  Calendar Customizing.   44.
* toggle-read-only:             Read Only Buffers.      43.
* top-level:                    Recursive Editing.      88.
* tq-close:                     Transaction Queues.     31.
* tq-create:                    Transaction Queues.     12.
* tq-enqueue:                   Transaction Queues.     18.
* track-mouse:                  Mouse Tracking.         18.
* 暫定マーク（transient-mark）モード: The Mark.         109.
* translate-region:             Substitution.           31.
* transpose-regions:            Transposition.          9.
* true（真）:                   nil and t.              21.
* 真（true）:                   nil and t.              21.
* truncate:                     Numeric Conversions.    16.
* truncate-string-to-width:     Width.                  19.
* try-completion:               Basic Completion.       11.
* type-of:                      Type Predicates.        161.
* undefined:                    Functions for Key Lookup.  44.
* `undefined', キーマップ:      Key Lookup.             94.
* キーマップ内の`undefined':    Key Lookup.             94.
* underline （フェイス名）:     Standard Faces.         30.
* undo-boundary:                Undo.                   60.
* unexec:                       Building Emacs.         82.
* unhandled-file-name-directory: Magic File Names.      128.
* unintern:                     Creating Symbols.       149.
* universal-argument:           Prefix Command Arguments.  95.
* unless:                       Conditionals.           40.
* unload-feature:               Unloading.              11.
* unlock-buffer:                File Locks.             34.
* unwind-protect:               Cleanups.               11.
* upcase:                       Case Conversion.        33.
* upcase-initials:              Case Conversion.        71.
* upcase-region:                Case Changes.           42.
* upcase-word:                  Case Changes.           69.
* update-directory-autoloads:   Autoload.               85.
* update-file-autoloads:        Autoload.               85.
* up-list:                      List Motion.            25.
* use-global-map:               Active Keymaps.         100.
* use-local-map:                Active Keymaps.         106.
* user-full-name:               User Identification.    41.
* user-full-name:               User Identification.    50.
* user-login-name:              User Identification.    26.
* user-login-name:              User Identification.    50.
* user-real-login-name:         User Identification.    37.
* user-real-login-name:         User Identification.    50.
* user-real-uid:                User Identification.    58.
* user-uid:                     User Identification.    64.
* user-variable-p:              Defining Variables.     118.
* `\v':                         Character Type.         38.
* variable-documentation:       Documentation Basics.   31.
* variable-interactive:         Defining Variables.     127.
* vconcat:                      Vector Functions.       32.
* vc-prefix-map:                Prefix Keys.            53.
* vector:                       Vector Functions.       17.
* vectorp:                      Vector Functions.       9.
* verify-visited-file-modtime:  Modification Time.      14.
* vertical-motion:              Screen Lines.           29.
* view-calendar-holidays-initially: Calendar Customizing.  15.
* view-diary-entries-initially: Calendar Customizing.   4.
* view-file:                    Visiting Functions.     84.
* view-mode-map:                Standard Keymaps.       186.
* view-register:                Registers.              62.
* visible-frame-list:           Finding All Frames.     13.
* visited-file-modtime:         Modification Time.      31.
* void-function:                Function Cells.         14.
* void-variable:                Void Variables.         4.
* `\w', 正規表現:               Syntax of Regexps.      213.
* `\W', 正規表現:               Syntax of Regexps.      218.
* 正規表現の`\w':               Syntax of Regexps.      213.
* 正規表現の`\W':               Syntax of Regexps.      218.
* waiting-for-user-input-p:     Sentinels.              71.
* walk-windows:                 Cyclic Window Ordering.  86.
* when:                         Conditionals.           30.
* where-is-internal:            Scanning Keymaps.       61.
* while:                        Iteration.              11.
* 白文字（whitespace:           Syntax Class Table.     10.
* wholenump:                    Predicates on Numbers.  27.
* widen:                        Narrowing.              40.
* window （オーバレイ属性）:    Overlay Properties.     29.
* window-at:                    Coordinates and Windows.  9.
* window-buffer:                Buffers and Windows.    23.
* window-configuration-p:       Window Configurations.  74.
* window-dedicated-p:           Choosing Window.        160.
* window-display-table:         Active Display Table.   14.
* window-edges:                 Size of Window.         39.
* window-end:                   Window Start.           34.
* window-frame:                 Frames and Windows.     10.
* window-height:                Size of Window.         13.
* window-hscroll:               Horizontal Scrolling.   40.
* window-live-p:                Deleting Windows.       18.
* window-minibuffer-p:          Minibuffer Misc.        64.
* windowp:                      Basic Windows.          77.
* window-point:                 Window Point.           32.
* window-redisplay-end-trigger: Window Hooks.           59.
* Windowsのファイル型:          MS-DOS File Types.      4.
* window-start:                 Window Start.           13.
* window-width:                 Size of Window.         28.
* with-current-buffer:          Current Buffer.         114.
* with-output-to-string:        Output Functions.       107.
* with-output-to-temp-buffer:   Temporary Displays.     10.
* with-temp-buffer:             Current Buffer.         121.
* with-temp-file:               Writing to Files.       58.
* with-timeout:                 Timers.                 58.
* 単語構成文字（word:           Syntax Class Table.     16.
* word-search-backward:         String Search.          96.
* word-search-forward:          String Search.          58.
* write-abbrev-file:            Abbrev Files.           37.
* write-char:                   Output Functions.       83.
* write-file:                   Saving Buffers.         44.
* write-region:                 Writing to Files.       21.
* wrong-number-of-arguments:    Argument List.          4.
* wrong-type-argument:          Type Predicates.        4.
* 複数のXディスプレイ:          Multiple Displays.      4.
* Xウィンドウシステム:          Window Systems.         17.
* セレクション（Xウィンドウシステム）: Window System Selections.  4.
* x-close-connection:           Multiple Displays.      54.
* x-color-defined-p:            Color Names.            7.
* x-color-values:               Color Names.            27.
* x-display-backing-store:      Server Data.            36.
* x-display-color-cells:        Server Data.            58.
* x-display-color-p:            Server Data.            55.
* x-display-grayscale-p:        Server Data.            52.
* x-display-list:               Multiple Displays.      35.
* x-display-mm-height:          Server Data.            27.
* x-display-mm-width:           Server Data.            33.
* x-display-pixel-height:       Server Data.            24.
* x-display-pixel-width:        Server Data.            30.
* x-display-planes:             Server Data.            44.
* x-display-save-under:         Server Data.            40.
* x-display-screens:            Server Data.            14.
* x-display-visual-class:       Server Data.            47.
* x-get-cut-buffer:             Window System Selections.  48.
* x-get-resource:               Resources.              7.
* x-get-selection:              Window System Selections.  30.
* x-list-font:                  Font Names.             7.
* x-open-connection:            Multiple Displays.      39.
* x-parse-geometry:             Size and Position.      74.
* x-pointer-shape:              Pointer Shapes.         10.
* x-popup-dialog:               Dialog Boxes.           14.
* x-popup-menu:                 Pop-Up Menus.           10.
* x-sensitive-text-pointer-shape: Pointer Shapes.       14.
* x-server-vendor:              Server Data.            21.
* x-server-version:             Server Data.            18.
* x-set-cut-buffer:             Window System Selections.  51.
* x-set-selection:              Window System Selections.  13.
* yank:                         Yank Commands.          10.
* yank-pop:                     Yank Commands.          23.
* yes/noの問い合わせ:           Yes-or-No Queries.      4.
* yes-or-no-p:                  Yes-or-No Queries.      80.
* y-or-n-p:                     Yes-or-No Queries.      22.
* y-or-n-p-with-timeout:        Yes-or-No Queries.      75.
* zerop:                        Predicates on Numbers.  34.





