[include]
	path = ~/.gitconfig.local
[core]
	excludesfile = ~/.gitignore
	autocrlf = input
	symlinks = true
	preloadindex = true
	fscache = true
	untrackedcache = true
[color]
	ui = auto
[log]
	date = iso
[alias]
	co = checkout
	cob = checkout -b
	ci = commit
	b = branch
	st = status -sb
	s = status -s
	d = diff
	dc = diff --cached
	f = fetch origin --prune
	fo = fetch origin
	fp = fetch origin --prune
	po = pull origin
	pu = push -u origin HEAD
	pr = pull --rebase
	ro = rebase origin
	g = log --pretty=format:'%C(bold blue)%h%C(reset) %ad %s %C(bold black)[%an]%C(reset)%C(bold yellow)%d%C(reset)' --graph
	ll = log --graph --decorate --oneline
	lf = log --follow
	newly = log HEAD@{1}..HEAD --reverse
	info = remote show origin
	delete-merged-branches = !git branch --merged | grep -v \\* | grep -v \\+ | grep feature/ | xargs -I % git branch -d %
	pull-dry-run = !"git fetch origin; B=$(git rev-parse --abbrev-ref HEAD); git diff --stat --summary ${B}..origin/${B}"
	fixup = commit --amend -C HEAD
	chown = commit --amend --reset-author  # authorを変える(と日時も変わる)
	newdate = !git commit --amend --date=\"$(date -R)\"  # 日時を現在時刻に
	currentbranchname = symbolic-ref --short HEAD
	# 特定のファイルの特定のリビジョンの内容が見たい
	# git show HASH:path/to/file
	unstage = reset HEAD
	pick = cherry-pick -x
	# 指定したブランチと現在のブランチの分岐点からrebase -iする
	rebase-from-branch = !"git rebase -i $(git merge-base ${1:-master} HEAD)"
[diff]
	algorithm = histogram
	renames = true
[pager]
	log = diff-highlight | less
	show = diff-highlight | less
	diff = diff-highlight | less
	branch = false
[http]
	sslVerify = false
	postBuffer = 524288000
[interactive]
	diffFilter = diff-highlight
[credential]
	helper = store
[ghq]
	root = ~/work/src
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[pull]
	rebase = false
[submodule]
	recurse = false
